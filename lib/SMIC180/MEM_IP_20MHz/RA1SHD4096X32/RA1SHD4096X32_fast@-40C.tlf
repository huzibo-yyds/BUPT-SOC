/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD4096X32 -words 4096 -bits 32 -frequency 20 -ring_width 2 -mux 16 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on -libname USERLIB
 *
 *      TLF model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD4096X32
 *      Words:          4096
 *      Word Width:     32
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        fast@-40C
 *      Delays:         min
 *
 *      Creation Date:  2002-06-03 13:02:10Z
 *      Version:	2005Q3V1
 *
 *      Verified With: Cadence Pearl
 *
 *      Modeling Assumptions: Warning and Error messages are issued if an input
 *          encounters a slew over the maximum characterized input slew.
 *          Warning messages are issued if an output is presented with greater
 *          that the maximum characterized load.  SDF created with this model
 *          will annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: Due to the limitations of this tool and the
 *          others it interacts with, some data reduction was necessary.  When
 *          reducing data, minimum values were chosen for the fast case corner
 *          and maximum values were used for the typical and best case corners.
 *          It is recommended that critical timing and setup and hold times be
 *          checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */
header(
  library("USERLIB")
  date("2002-06-03 13:02:36Z")
  vendor("Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2002 ARM Physical IP, Inc.")
  environment("fast@-40C")
  technology("CMOS")
  version("2005Q3V1")
  tlf_version("4.1")
)
/* wire load */
net_res_model(gateres (linear value(0:~:8.5e-8:5.0e-8 )))
net_cap_model(gatecap (linear value(0:3:1.0e-4:0.005 3:10:3.0e-4:0.002 )))

/* timing properties */
properties(
  /* models for RC delays */
  net_cap (gatecap)
  net_res (gateres)

  /* operating conditions */
  proc_var(1)
  temperature(-40.000)
  voltage(1.980)

  /* multipliers and k-factors */
  proc_mult(1.0)
  temp_mult(1.0)
  volt_mult(1.0)

  /* threshold definitions */
  table_input_threshold (0.500)
  table_output_threshold (0.500)
  table_transition_start (0.100)
  table_transition_end (0.900)

  /* defaults */
  slew_limit(warn(2.200) error(2.200))
  load_limit(0.823) /* max output load */

  /* unit attributes */
  unit(
    time_unit(1ns)
    volt_unit(1V)
    current_unit(1uA)
    power_unit(1mW)
    area_unit(1squ)
    cap_unit (1PF)
  )
)

cell(RA1SHD4096X32

Area (835512.042)
CT_TOLERANCE(0.198)

TIMING_model (tch_tas_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.229:0.229:0.229 0.229:0.229:0.229 0.228:0.228:0.228 0.228:0.228:0.228 0.255:0.255:0.255 0.292:0.292:0.292 0.376:0.376:0.376)
	    (0.227:0.227:0.227 0.227:0.227:0.227 0.227:0.227:0.227 0.226:0.226:0.226 0.253:0.253:0.253 0.290:0.290:0.290 0.374:0.374:0.374)
	    (0.221:0.221:0.221 0.221:0.221:0.221 0.220:0.220:0.220 0.220:0.220:0.220 0.247:0.247:0.247 0.284:0.284:0.284 0.368:0.368:0.368)
	    (0.212:0.212:0.212 0.212:0.212:0.212 0.212:0.212:0.212 0.212:0.212:0.212 0.238:0.238:0.238 0.276:0.276:0.276 0.359:0.359:0.359)
	    (0.191:0.191:0.191 0.191:0.191:0.191 0.191:0.191:0.191 0.190:0.190:0.190 0.217:0.217:0.217 0.254:0.254:0.254 0.338:0.338:0.338)
	    (0.174:0.174:0.174 0.174:0.174:0.174 0.174:0.174:0.174 0.174:0.174:0.174 0.200:0.200:0.200 0.238:0.238:0.238 0.321:0.321:0.321)
	    (0.136:0.136:0.136 0.136:0.136:0.136 0.136:0.136:0.136 0.136:0.136:0.136 0.162:0.162:0.162 0.200:0.200:0.200 0.283:0.283:0.283)
	  )))
TIMING_model (tch_tas_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.229:0.229:0.229 0.229:0.229:0.229 0.228:0.228:0.228 0.228:0.228:0.228 0.255:0.255:0.255 0.292:0.292:0.292 0.376:0.376:0.376)
	    (0.227:0.227:0.227 0.227:0.227:0.227 0.227:0.227:0.227 0.226:0.226:0.226 0.253:0.253:0.253 0.290:0.290:0.290 0.374:0.374:0.374)
	    (0.221:0.221:0.221 0.221:0.221:0.221 0.220:0.220:0.220 0.220:0.220:0.220 0.247:0.247:0.247 0.284:0.284:0.284 0.368:0.368:0.368)
	    (0.212:0.212:0.212 0.212:0.212:0.212 0.212:0.212:0.212 0.212:0.212:0.212 0.238:0.238:0.238 0.276:0.276:0.276 0.359:0.359:0.359)
	    (0.191:0.191:0.191 0.191:0.191:0.191 0.191:0.191:0.191 0.190:0.190:0.190 0.217:0.217:0.217 0.254:0.254:0.254 0.338:0.338:0.338)
	    (0.174:0.174:0.174 0.174:0.174:0.174 0.174:0.174:0.174 0.174:0.174:0.174 0.200:0.200:0.200 0.238:0.238:0.238 0.321:0.321:0.321)
	    (0.136:0.136:0.136 0.136:0.136:0.136 0.136:0.136:0.136 0.136:0.136:0.136 0.162:0.162:0.162 0.200:0.200:0.200 0.283:0.283:0.283)
	  )))
TIMING_model (tch_tah_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.041:0.041:0.041 0.041:0.041:0.041 0.042:0.042:0.042 0.042:0.042:0.042 0.043:0.043:0.043 0.044:0.044:0.044 0.046:0.046:0.046)
	    (0.043:0.043:0.043 0.043:0.043:0.043 0.043:0.043:0.043 0.044:0.044:0.044 0.045:0.045:0.045 0.045:0.045:0.045 0.047:0.047:0.047)
	    (0.049:0.049:0.049 0.049:0.049:0.049 0.050:0.050:0.050 0.050:0.050:0.050 0.051:0.051:0.051 0.052:0.052:0.052 0.054:0.054:0.054)
	    (0.058:0.058:0.058 0.058:0.058:0.058 0.058:0.058:0.058 0.058:0.058:0.058 0.059:0.059:0.059 0.060:0.060:0.060 0.062:0.062:0.062)
	    (0.079:0.079:0.079 0.079:0.079:0.079 0.079:0.079:0.079 0.080:0.080:0.080 0.081:0.081:0.081 0.081:0.081:0.081 0.083:0.083:0.083)
	    (0.096:0.096:0.096 0.096:0.096:0.096 0.096:0.096:0.096 0.096:0.096:0.096 0.097:0.097:0.097 0.098:0.098:0.098 0.100:0.100:0.100)
	    (0.134:0.134:0.134 0.134:0.134:0.134 0.134:0.134:0.134 0.134:0.134:0.134 0.135:0.135:0.135 0.136:0.136:0.136 0.138:0.138:0.138)
	  )))
TIMING_model (tch_tah_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.030:0.030:0.030 0.026:0.026:0.026 0.012:0.012:0.012 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.031:0.031:0.031 0.028:0.028:0.028 0.014:0.014:0.014 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.038:0.038:0.038 0.034:0.034:0.034 0.020:0.020:0.020 0.001:0.001:0.001 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.046:0.046:0.046 0.042:0.042:0.042 0.028:0.028:0.028 0.010:0.010:0.010 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.067:0.067:0.067 0.063:0.063:0.063 0.049:0.049:0.049 0.031:0.031:0.031 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.084:0.084:0.084 0.080:0.080:0.080 0.066:0.066:0.066 0.048:0.048:0.048 0.001:0.001:0.001 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.122:0.122:0.122 0.118:0.118:0.118 0.104:0.104:0.104 0.086:0.086:0.086 0.039:0.039:0.039 0.002:0.002:0.002 0.000:0.000:0.000)
	  )))
TIMING_model (tch_tcs_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.279:0.279:0.279 0.279:0.279:0.279 0.279:0.279:0.279 0.279:0.279:0.279 0.282:0.282:0.282 0.327:0.327:0.327 0.429:0.429:0.429)
	    (0.277:0.277:0.277 0.277:0.277:0.277 0.277:0.277:0.277 0.278:0.278:0.278 0.280:0.280:0.280 0.326:0.326:0.326 0.428:0.428:0.428)
	    (0.271:0.271:0.271 0.271:0.271:0.271 0.271:0.271:0.271 0.271:0.271:0.271 0.274:0.274:0.274 0.319:0.319:0.319 0.421:0.421:0.421)
	    (0.262:0.262:0.262 0.262:0.262:0.262 0.263:0.263:0.263 0.263:0.263:0.263 0.265:0.265:0.265 0.311:0.311:0.311 0.413:0.413:0.413)
	    (0.241:0.241:0.241 0.241:0.241:0.241 0.241:0.241:0.241 0.242:0.242:0.242 0.244:0.244:0.244 0.290:0.290:0.290 0.392:0.392:0.392)
	    (0.224:0.224:0.224 0.224:0.224:0.224 0.225:0.225:0.225 0.225:0.225:0.225 0.227:0.227:0.227 0.273:0.273:0.273 0.375:0.375:0.375)
	    (0.186:0.186:0.186 0.186:0.186:0.186 0.187:0.187:0.187 0.187:0.187:0.187 0.189:0.189:0.189 0.235:0.235:0.235 0.337:0.337:0.337)
	  )))
TIMING_model (tch_tcs_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.279:0.279:0.279 0.279:0.279:0.279 0.279:0.279:0.279 0.279:0.279:0.279 0.282:0.282:0.282 0.327:0.327:0.327 0.429:0.429:0.429)
	    (0.277:0.277:0.277 0.277:0.277:0.277 0.277:0.277:0.277 0.278:0.278:0.278 0.280:0.280:0.280 0.326:0.326:0.326 0.428:0.428:0.428)
	    (0.271:0.271:0.271 0.271:0.271:0.271 0.271:0.271:0.271 0.271:0.271:0.271 0.274:0.274:0.274 0.319:0.319:0.319 0.421:0.421:0.421)
	    (0.262:0.262:0.262 0.262:0.262:0.262 0.263:0.263:0.263 0.263:0.263:0.263 0.265:0.265:0.265 0.311:0.311:0.311 0.413:0.413:0.413)
	    (0.241:0.241:0.241 0.241:0.241:0.241 0.241:0.241:0.241 0.242:0.242:0.242 0.244:0.244:0.244 0.290:0.290:0.290 0.392:0.392:0.392)
	    (0.224:0.224:0.224 0.224:0.224:0.224 0.225:0.225:0.225 0.225:0.225:0.225 0.227:0.227:0.227 0.273:0.273:0.273 0.375:0.375:0.375)
	    (0.186:0.186:0.186 0.186:0.186:0.186 0.187:0.187:0.187 0.187:0.187:0.187 0.189:0.189:0.189 0.235:0.235:0.235 0.337:0.337:0.337)
	  )))
TIMING_model (tch_tch_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.007:0.007:0.007 0.007:0.007:0.007 0.007:0.007:0.007 0.007:0.007:0.007 0.006:0.006:0.006 0.005:0.005:0.005 0.003:0.003:0.003)
	    (0.024:0.024:0.024 0.024:0.024:0.024 0.024:0.024:0.024 0.024:0.024:0.024 0.022:0.022:0.022 0.022:0.022:0.022 0.020:0.020:0.020)
	    (0.062:0.062:0.062 0.062:0.062:0.062 0.062:0.062:0.062 0.062:0.062:0.062 0.060:0.060:0.060 0.060:0.060:0.060 0.058:0.058:0.058)
	  )))
TIMING_model (tch_tch_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.007:0.007:0.007 0.007:0.007:0.007 0.007:0.007:0.007 0.007:0.007:0.007 0.006:0.006:0.006 0.005:0.005:0.005 0.003:0.003:0.003)
	    (0.024:0.024:0.024 0.024:0.024:0.024 0.024:0.024:0.024 0.024:0.024:0.024 0.022:0.022:0.022 0.022:0.022:0.022 0.020:0.020:0.020)
	    (0.062:0.062:0.062 0.062:0.062:0.062 0.062:0.062:0.062 0.062:0.062:0.062 0.060:0.060:0.060 0.060:0.060:0.060 0.058:0.058:0.058)
	  )))
TIMING_model (tch_tds_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.131:0.131:0.131 0.131:0.131:0.131 0.132:0.132:0.132 0.133:0.133:0.133 0.195:0.195:0.195 0.254:0.254:0.254 0.385:0.385:0.385)
	    (0.129:0.129:0.129 0.129:0.129:0.129 0.130:0.130:0.130 0.132:0.132:0.132 0.194:0.194:0.194 0.252:0.252:0.252 0.384:0.384:0.384)
	    (0.123:0.123:0.123 0.123:0.123:0.123 0.124:0.124:0.124 0.125:0.125:0.125 0.187:0.187:0.187 0.246:0.246:0.246 0.377:0.377:0.377)
	    (0.114:0.114:0.114 0.115:0.115:0.115 0.116:0.116:0.116 0.117:0.117:0.117 0.179:0.179:0.179 0.237:0.237:0.237 0.369:0.369:0.369)
	    (0.093:0.093:0.093 0.094:0.094:0.094 0.094:0.094:0.094 0.096:0.096:0.096 0.158:0.158:0.158 0.216:0.216:0.216 0.348:0.348:0.348)
	    (0.076:0.076:0.076 0.077:0.077:0.077 0.078:0.078:0.078 0.079:0.079:0.079 0.141:0.141:0.141 0.199:0.199:0.199 0.331:0.331:0.331)
	    (0.038:0.038:0.038 0.039:0.039:0.039 0.040:0.040:0.040 0.041:0.041:0.041 0.103:0.103:0.103 0.161:0.161:0.161 0.293:0.293:0.293)
	  )))
TIMING_model (tch_tds_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.131:0.131:0.131 0.131:0.131:0.131 0.132:0.132:0.132 0.133:0.133:0.133 0.195:0.195:0.195 0.254:0.254:0.254 0.385:0.385:0.385)
	    (0.129:0.129:0.129 0.129:0.129:0.129 0.130:0.130:0.130 0.132:0.132:0.132 0.194:0.194:0.194 0.252:0.252:0.252 0.384:0.384:0.384)
	    (0.123:0.123:0.123 0.123:0.123:0.123 0.124:0.124:0.124 0.125:0.125:0.125 0.187:0.187:0.187 0.246:0.246:0.246 0.377:0.377:0.377)
	    (0.114:0.114:0.114 0.115:0.115:0.115 0.116:0.116:0.116 0.117:0.117:0.117 0.179:0.179:0.179 0.237:0.237:0.237 0.369:0.369:0.369)
	    (0.093:0.093:0.093 0.094:0.094:0.094 0.094:0.094:0.094 0.096:0.096:0.096 0.158:0.158:0.158 0.216:0.216:0.216 0.348:0.348:0.348)
	    (0.076:0.076:0.076 0.077:0.077:0.077 0.078:0.078:0.078 0.079:0.079:0.079 0.141:0.141:0.141 0.199:0.199:0.199 0.331:0.331:0.331)
	    (0.038:0.038:0.038 0.039:0.039:0.039 0.040:0.040:0.040 0.041:0.041:0.041 0.103:0.103:0.103 0.161:0.161:0.161 0.293:0.293:0.293)
	  )))
TIMING_model (tch_tdh_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.011:0.011:0.011 0.005:0.005:0.005 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.013:0.013:0.013 0.007:0.007:0.007 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.019:0.019:0.019 0.013:0.013:0.013 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.028:0.028:0.028 0.022:0.022:0.022 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.049:0.049:0.049 0.043:0.043:0.043 0.021:0.021:0.021 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.066:0.066:0.066 0.060:0.060:0.060 0.038:0.038:0.038 0.009:0.009:0.009 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.104:0.104:0.104 0.098:0.098:0.098 0.076:0.076:0.076 0.047:0.047:0.047 0.017:0.017:0.017 0.015:0.015:0.015 0.009:0.009:0.009)
	  )))
TIMING_model (tch_tdh_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.011:0.011:0.011 0.005:0.005:0.005 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.013:0.013:0.013 0.007:0.007:0.007 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.019:0.019:0.019 0.013:0.013:0.013 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.028:0.028:0.028 0.022:0.022:0.022 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.049:0.049:0.049 0.043:0.043:0.043 0.021:0.021:0.021 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.066:0.066:0.066 0.060:0.060:0.060 0.038:0.038:0.038 0.009:0.009:0.009 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.104:0.104:0.104 0.098:0.098:0.098 0.076:0.076:0.076 0.047:0.047:0.047 0.017:0.017:0.017 0.015:0.015:0.015 0.009:0.009:0.009)
	  )))
TIMING_model (tch_tws_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.152:0.152:0.152 0.153:0.153:0.153 0.158:0.158:0.158 0.183:0.183:0.183 0.244:0.244:0.244 0.293:0.293:0.293 0.404:0.404:0.404)
	    (0.151:0.151:0.151 0.152:0.152:0.152 0.156:0.156:0.156 0.181:0.181:0.181 0.243:0.243:0.243 0.292:0.292:0.292 0.402:0.402:0.402)
	    (0.144:0.144:0.144 0.145:0.145:0.145 0.150:0.150:0.150 0.175:0.175:0.175 0.236:0.236:0.236 0.285:0.285:0.285 0.396:0.396:0.396)
	    (0.136:0.136:0.136 0.137:0.137:0.137 0.142:0.142:0.142 0.166:0.166:0.166 0.228:0.228:0.228 0.277:0.277:0.277 0.388:0.388:0.388)
	    (0.115:0.115:0.115 0.116:0.116:0.116 0.121:0.121:0.121 0.145:0.145:0.145 0.207:0.207:0.207 0.256:0.256:0.256 0.366:0.366:0.366)
	    (0.098:0.098:0.098 0.099:0.099:0.099 0.104:0.104:0.104 0.128:0.128:0.128 0.190:0.190:0.190 0.239:0.239:0.239 0.349:0.349:0.349)
	    (0.083:0.083:0.083 0.084:0.084:0.084 0.088:0.088:0.088 0.094:0.094:0.094 0.156:0.156:0.156 0.205:0.205:0.205 0.315:0.315:0.315)
	  )))
TIMING_model (tch_tws_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.152:0.152:0.152 0.153:0.153:0.153 0.158:0.158:0.158 0.183:0.183:0.183 0.244:0.244:0.244 0.293:0.293:0.293 0.404:0.404:0.404)
	    (0.151:0.151:0.151 0.152:0.152:0.152 0.156:0.156:0.156 0.181:0.181:0.181 0.243:0.243:0.243 0.292:0.292:0.292 0.402:0.402:0.402)
	    (0.144:0.144:0.144 0.145:0.145:0.145 0.150:0.150:0.150 0.175:0.175:0.175 0.236:0.236:0.236 0.285:0.285:0.285 0.396:0.396:0.396)
	    (0.136:0.136:0.136 0.137:0.137:0.137 0.142:0.142:0.142 0.166:0.166:0.166 0.228:0.228:0.228 0.277:0.277:0.277 0.388:0.388:0.388)
	    (0.115:0.115:0.115 0.116:0.116:0.116 0.121:0.121:0.121 0.145:0.145:0.145 0.207:0.207:0.207 0.256:0.256:0.256 0.366:0.366:0.366)
	    (0.098:0.098:0.098 0.099:0.099:0.099 0.104:0.104:0.104 0.128:0.128:0.128 0.190:0.190:0.190 0.239:0.239:0.239 0.349:0.349:0.349)
	    (0.083:0.083:0.083 0.084:0.084:0.084 0.088:0.088:0.088 0.094:0.094:0.094 0.156:0.156:0.156 0.205:0.205:0.205 0.315:0.315:0.315)
	  )))
TIMING_model (tch_twh_rise 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (tch_twh_fall 	(spline
	  (clock_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	    (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
	  )))
TIMING_model (period_tcyc (const (0.859959996904688)))
TIMING_model (tpw_tckl (const (0.1122)))
TIMING_model (tpw_tckh (const (0.07948)))
TIMING_model (sl_qr 	(spline
	  (load_axis 0.023 0.033 0.063 0.113 0.263 0.543 0.823)
	  ((0.033 0.038 0.053 0.079 0.154 0.294 0.434))))
TIMING_model (sl_qf 	(spline
	  (load_axis 0.023 0.033 0.063 0.113 0.263 0.543 0.823)
	  ((0.037 0.039 0.048 0.061 0.102 0.178 0.254))))
TIMING_model (dly_f_tanpr 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (load_axis 0.023 0.033 0.063 0.113 0.263 0.543 0.823)
	  (
	    (0.837:0.837:0.837 0.839:0.839:0.839 0.845:0.845:0.845 0.854:0.854:0.854 0.881:0.881:0.881 0.930:0.930:0.930 0.980:0.980:0.980)
	    (0.839:0.839:0.839 0.841:0.841:0.841 0.847:0.847:0.847 0.856:0.856:0.856 0.882:0.882:0.882 0.932:0.932:0.932 0.982:0.982:0.982)
	    (0.845:0.845:0.845 0.847:0.847:0.847 0.853:0.853:0.853 0.862:0.862:0.862 0.889:0.889:0.889 0.938:0.938:0.938 0.988:0.988:0.988)
	    (0.853:0.853:0.853 0.856:0.856:0.856 0.862:0.862:0.862 0.871:0.871:0.871 0.897:0.897:0.897 0.947:0.947:0.947 0.997:0.997:0.997)
	    (0.875:0.875:0.875 0.877:0.877:0.877 0.883:0.883:0.883 0.892:0.892:0.892 0.918:0.918:0.918 0.968:0.968:0.968 1.018:1.018:1.018)
	    (0.891:0.891:0.891 0.894:0.894:0.894 0.900:0.900:0.900 0.909:0.909:0.909 0.935:0.935:0.935 0.985:0.985:0.985 1.035:1.035:1.035)
	    (0.929:0.929:0.929 0.932:0.932:0.932 0.938:0.938:0.938 0.947:0.947:0.947 0.973:0.973:0.973 1.023:1.023:1.023 1.073:1.073:1.073)
	  )))
TIMING_model (dly_f_tanpf 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (load_axis 0.023 0.033 0.063 0.113 0.263 0.543 0.823)
	  (
	    (0.837:0.837:0.837 0.839:0.839:0.839 0.845:0.845:0.845 0.854:0.854:0.854 0.881:0.881:0.881 0.930:0.930:0.930 0.980:0.980:0.980)
	    (0.839:0.839:0.839 0.841:0.841:0.841 0.847:0.847:0.847 0.856:0.856:0.856 0.882:0.882:0.882 0.932:0.932:0.932 0.982:0.982:0.982)
	    (0.845:0.845:0.845 0.847:0.847:0.847 0.853:0.853:0.853 0.862:0.862:0.862 0.889:0.889:0.889 0.938:0.938:0.938 0.988:0.988:0.988)
	    (0.853:0.853:0.853 0.856:0.856:0.856 0.862:0.862:0.862 0.871:0.871:0.871 0.897:0.897:0.897 0.947:0.947:0.947 0.997:0.997:0.997)
	    (0.875:0.875:0.875 0.877:0.877:0.877 0.883:0.883:0.883 0.892:0.892:0.892 0.918:0.918:0.918 0.968:0.968:0.968 1.018:1.018:1.018)
	    (0.891:0.891:0.891 0.894:0.894:0.894 0.900:0.900:0.900 0.909:0.909:0.909 0.935:0.935:0.935 0.985:0.985:0.985 1.035:1.035:1.035)
	    (0.929:0.929:0.929 0.932:0.932:0.932 0.938:0.938:0.938 0.947:0.947:0.947 0.973:0.973:0.973 1.023:1.023:1.023 1.073:1.073:1.073)
	  )))
TIMING_model (dly_f_tl_zr 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (load_axis 0.000 0.010 0.040 0.090 0.240 0.520 0.800)
	  (
	    (0.371:0.371:0.371 0.373:0.373:0.373 0.381:0.381:0.381 0.393:0.393:0.393 0.430:0.430:0.430 0.454:0.454:0.454 0.454:0.454:0.454)
	    (0.376:0.376:0.376 0.379:0.379:0.379 0.386:0.386:0.386 0.399:0.399:0.399 0.436:0.436:0.436 0.456:0.456:0.456 0.456:0.456:0.456)
	    (0.397:0.397:0.397 0.400:0.400:0.400 0.407:0.407:0.407 0.419:0.419:0.419 0.457:0.457:0.457 0.462:0.462:0.462 0.462:0.462:0.462)
	    (0.425:0.425:0.425 0.427:0.427:0.427 0.435:0.435:0.435 0.447:0.447:0.447 0.470:0.470:0.470 0.470:0.470:0.470 0.470:0.470:0.470)
	    (0.489:0.489:0.489 0.489:0.489:0.489 0.489:0.489:0.489 0.489:0.489:0.489 0.489:0.489:0.489 0.489:0.489:0.489 0.489:0.489:0.489)
	    (0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505)
	    (0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540)
	  )))
TIMING_model (dly_f_tl_zf 	(spline
	  (input_slew_axis 0.010 0.050 0.200 0.400 0.900 1.300 2.200)
	  (load_axis 0.000 0.010 0.040 0.090 0.240 0.520 0.800)
	  (
	    (0.335:0.335:0.335 0.337:0.337:0.337 0.342:0.342:0.342 0.351:0.351:0.351 0.377:0.377:0.377 0.427:0.427:0.427 0.454:0.454:0.454)
	    (0.340:0.340:0.340 0.342:0.342:0.342 0.348:0.348:0.348 0.356:0.356:0.356 0.383:0.383:0.383 0.433:0.433:0.433 0.456:0.456:0.456)
	    (0.361:0.361:0.361 0.363:0.363:0.363 0.368:0.368:0.368 0.377:0.377:0.377 0.404:0.404:0.404 0.454:0.454:0.454 0.462:0.462:0.462)
	    (0.389:0.389:0.389 0.391:0.391:0.391 0.396:0.396:0.396 0.405:0.405:0.405 0.432:0.432:0.432 0.470:0.470:0.470 0.470:0.470:0.470)
	    (0.459:0.459:0.459 0.460:0.460:0.460 0.466:0.466:0.466 0.475:0.475:0.475 0.489:0.489:0.489 0.489:0.489:0.489 0.489:0.489:0.489)
	    (0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505 0.505:0.505:0.505)
	    (0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540 0.540:0.540:0.540)
	  )))

bus(Q[31:0] bustype(output)
 load_limit(warn(0.823) error(2.147483647e3))
 capacitance(0.023)
)
bus(A[11:0] bustype(input)
 capacitance(0.055)
)
pin(CEN pintype(input)
 capacitance(0.015)
)
pin(CLK clock_pin pintype(input)
 slew_limit(warn(2.200) error(2.200))
 capacitance(0.277)
)
bus(D[31:0] bustype(input)
 capacitance(0.004)
)
bus(WEN[3:0] bustype(input)
 capacitance(0.123)
)
pin(OEN pintype(input)
 capacitance(0.010)
)
pin(VDD pintype(supply) vdrop_limit(0.099))
pin(VSS pintype(ground) vdrop_limit(0.099))
setup (A[0] => CLK 01 posedge tch_tas_rise)
setup (A[0] => CLK 10 posedge tch_tas_fall)
hold (A[0] => CLK 01 posedge tch_tah_rise)
hold (A[0] => CLK 10 posedge tch_tah_fall)
setup (A[1] => CLK 01 posedge tch_tas_rise)
setup (A[1] => CLK 10 posedge tch_tas_fall)
hold (A[1] => CLK 01 posedge tch_tah_rise)
hold (A[1] => CLK 10 posedge tch_tah_fall)
setup (A[2] => CLK 01 posedge tch_tas_rise)
setup (A[2] => CLK 10 posedge tch_tas_fall)
hold (A[2] => CLK 01 posedge tch_tah_rise)
hold (A[2] => CLK 10 posedge tch_tah_fall)
setup (A[3] => CLK 01 posedge tch_tas_rise)
setup (A[3] => CLK 10 posedge tch_tas_fall)
hold (A[3] => CLK 01 posedge tch_tah_rise)
hold (A[3] => CLK 10 posedge tch_tah_fall)
setup (A[4] => CLK 01 posedge tch_tas_rise)
setup (A[4] => CLK 10 posedge tch_tas_fall)
hold (A[4] => CLK 01 posedge tch_tah_rise)
hold (A[4] => CLK 10 posedge tch_tah_fall)
setup (A[5] => CLK 01 posedge tch_tas_rise)
setup (A[5] => CLK 10 posedge tch_tas_fall)
hold (A[5] => CLK 01 posedge tch_tah_rise)
hold (A[5] => CLK 10 posedge tch_tah_fall)
setup (A[6] => CLK 01 posedge tch_tas_rise)
setup (A[6] => CLK 10 posedge tch_tas_fall)
hold (A[6] => CLK 01 posedge tch_tah_rise)
hold (A[6] => CLK 10 posedge tch_tah_fall)
setup (A[7] => CLK 01 posedge tch_tas_rise)
setup (A[7] => CLK 10 posedge tch_tas_fall)
hold (A[7] => CLK 01 posedge tch_tah_rise)
hold (A[7] => CLK 10 posedge tch_tah_fall)
setup (A[8] => CLK 01 posedge tch_tas_rise)
setup (A[8] => CLK 10 posedge tch_tas_fall)
hold (A[8] => CLK 01 posedge tch_tah_rise)
hold (A[8] => CLK 10 posedge tch_tah_fall)
setup (A[9] => CLK 01 posedge tch_tas_rise)
setup (A[9] => CLK 10 posedge tch_tas_fall)
hold (A[9] => CLK 01 posedge tch_tah_rise)
hold (A[9] => CLK 10 posedge tch_tah_fall)
setup (A[10] => CLK 01 posedge tch_tas_rise)
setup (A[10] => CLK 10 posedge tch_tas_fall)
hold (A[10] => CLK 01 posedge tch_tah_rise)
hold (A[10] => CLK 10 posedge tch_tah_fall)
setup (A[11] => CLK 01 posedge tch_tas_rise)
setup (A[11] => CLK 10 posedge tch_tas_fall)
hold (A[11] => CLK 01 posedge tch_tah_rise)
hold (A[11] => CLK 10 posedge tch_tah_fall)
setup (CEN => CLK 01 posEdge tch_tcs_rise)
setup (CEN => CLK 10 posEdge tch_tcs_fall)
hold (CEN => CLK 01 posEdge tch_tch_rise)
hold (CEN => CLK 10 posEdge tch_tch_fall)
setup (D[0] => CLK 01 posedge tch_tds_rise)
setup (D[0] => CLK 10 posedge tch_tds_fall)
hold (D[0] => CLK 01 posedge tch_tdh_rise)
hold (D[0] => CLK 10 posedge tch_tdh_fall)
setup (D[1] => CLK 01 posedge tch_tds_rise)
setup (D[1] => CLK 10 posedge tch_tds_fall)
hold (D[1] => CLK 01 posedge tch_tdh_rise)
hold (D[1] => CLK 10 posedge tch_tdh_fall)
setup (D[2] => CLK 01 posedge tch_tds_rise)
setup (D[2] => CLK 10 posedge tch_tds_fall)
hold (D[2] => CLK 01 posedge tch_tdh_rise)
hold (D[2] => CLK 10 posedge tch_tdh_fall)
setup (D[3] => CLK 01 posedge tch_tds_rise)
setup (D[3] => CLK 10 posedge tch_tds_fall)
hold (D[3] => CLK 01 posedge tch_tdh_rise)
hold (D[3] => CLK 10 posedge tch_tdh_fall)
setup (D[4] => CLK 01 posedge tch_tds_rise)
setup (D[4] => CLK 10 posedge tch_tds_fall)
hold (D[4] => CLK 01 posedge tch_tdh_rise)
hold (D[4] => CLK 10 posedge tch_tdh_fall)
setup (D[5] => CLK 01 posedge tch_tds_rise)
setup (D[5] => CLK 10 posedge tch_tds_fall)
hold (D[5] => CLK 01 posedge tch_tdh_rise)
hold (D[5] => CLK 10 posedge tch_tdh_fall)
setup (D[6] => CLK 01 posedge tch_tds_rise)
setup (D[6] => CLK 10 posedge tch_tds_fall)
hold (D[6] => CLK 01 posedge tch_tdh_rise)
hold (D[6] => CLK 10 posedge tch_tdh_fall)
setup (D[7] => CLK 01 posedge tch_tds_rise)
setup (D[7] => CLK 10 posedge tch_tds_fall)
hold (D[7] => CLK 01 posedge tch_tdh_rise)
hold (D[7] => CLK 10 posedge tch_tdh_fall)
setup (D[8] => CLK 01 posedge tch_tds_rise)
setup (D[8] => CLK 10 posedge tch_tds_fall)
hold (D[8] => CLK 01 posedge tch_tdh_rise)
hold (D[8] => CLK 10 posedge tch_tdh_fall)
setup (D[9] => CLK 01 posedge tch_tds_rise)
setup (D[9] => CLK 10 posedge tch_tds_fall)
hold (D[9] => CLK 01 posedge tch_tdh_rise)
hold (D[9] => CLK 10 posedge tch_tdh_fall)
setup (D[10] => CLK 01 posedge tch_tds_rise)
setup (D[10] => CLK 10 posedge tch_tds_fall)
hold (D[10] => CLK 01 posedge tch_tdh_rise)
hold (D[10] => CLK 10 posedge tch_tdh_fall)
setup (D[11] => CLK 01 posedge tch_tds_rise)
setup (D[11] => CLK 10 posedge tch_tds_fall)
hold (D[11] => CLK 01 posedge tch_tdh_rise)
hold (D[11] => CLK 10 posedge tch_tdh_fall)
setup (D[12] => CLK 01 posedge tch_tds_rise)
setup (D[12] => CLK 10 posedge tch_tds_fall)
hold (D[12] => CLK 01 posedge tch_tdh_rise)
hold (D[12] => CLK 10 posedge tch_tdh_fall)
setup (D[13] => CLK 01 posedge tch_tds_rise)
setup (D[13] => CLK 10 posedge tch_tds_fall)
hold (D[13] => CLK 01 posedge tch_tdh_rise)
hold (D[13] => CLK 10 posedge tch_tdh_fall)
setup (D[14] => CLK 01 posedge tch_tds_rise)
setup (D[14] => CLK 10 posedge tch_tds_fall)
hold (D[14] => CLK 01 posedge tch_tdh_rise)
hold (D[14] => CLK 10 posedge tch_tdh_fall)
setup (D[15] => CLK 01 posedge tch_tds_rise)
setup (D[15] => CLK 10 posedge tch_tds_fall)
hold (D[15] => CLK 01 posedge tch_tdh_rise)
hold (D[15] => CLK 10 posedge tch_tdh_fall)
setup (D[16] => CLK 01 posedge tch_tds_rise)
setup (D[16] => CLK 10 posedge tch_tds_fall)
hold (D[16] => CLK 01 posedge tch_tdh_rise)
hold (D[16] => CLK 10 posedge tch_tdh_fall)
setup (D[17] => CLK 01 posedge tch_tds_rise)
setup (D[17] => CLK 10 posedge tch_tds_fall)
hold (D[17] => CLK 01 posedge tch_tdh_rise)
hold (D[17] => CLK 10 posedge tch_tdh_fall)
setup (D[18] => CLK 01 posedge tch_tds_rise)
setup (D[18] => CLK 10 posedge tch_tds_fall)
hold (D[18] => CLK 01 posedge tch_tdh_rise)
hold (D[18] => CLK 10 posedge tch_tdh_fall)
setup (D[19] => CLK 01 posedge tch_tds_rise)
setup (D[19] => CLK 10 posedge tch_tds_fall)
hold (D[19] => CLK 01 posedge tch_tdh_rise)
hold (D[19] => CLK 10 posedge tch_tdh_fall)
setup (D[20] => CLK 01 posedge tch_tds_rise)
setup (D[20] => CLK 10 posedge tch_tds_fall)
hold (D[20] => CLK 01 posedge tch_tdh_rise)
hold (D[20] => CLK 10 posedge tch_tdh_fall)
setup (D[21] => CLK 01 posedge tch_tds_rise)
setup (D[21] => CLK 10 posedge tch_tds_fall)
hold (D[21] => CLK 01 posedge tch_tdh_rise)
hold (D[21] => CLK 10 posedge tch_tdh_fall)
setup (D[22] => CLK 01 posedge tch_tds_rise)
setup (D[22] => CLK 10 posedge tch_tds_fall)
hold (D[22] => CLK 01 posedge tch_tdh_rise)
hold (D[22] => CLK 10 posedge tch_tdh_fall)
setup (D[23] => CLK 01 posedge tch_tds_rise)
setup (D[23] => CLK 10 posedge tch_tds_fall)
hold (D[23] => CLK 01 posedge tch_tdh_rise)
hold (D[23] => CLK 10 posedge tch_tdh_fall)
setup (D[24] => CLK 01 posedge tch_tds_rise)
setup (D[24] => CLK 10 posedge tch_tds_fall)
hold (D[24] => CLK 01 posedge tch_tdh_rise)
hold (D[24] => CLK 10 posedge tch_tdh_fall)
setup (D[25] => CLK 01 posedge tch_tds_rise)
setup (D[25] => CLK 10 posedge tch_tds_fall)
hold (D[25] => CLK 01 posedge tch_tdh_rise)
hold (D[25] => CLK 10 posedge tch_tdh_fall)
setup (D[26] => CLK 01 posedge tch_tds_rise)
setup (D[26] => CLK 10 posedge tch_tds_fall)
hold (D[26] => CLK 01 posedge tch_tdh_rise)
hold (D[26] => CLK 10 posedge tch_tdh_fall)
setup (D[27] => CLK 01 posedge tch_tds_rise)
setup (D[27] => CLK 10 posedge tch_tds_fall)
hold (D[27] => CLK 01 posedge tch_tdh_rise)
hold (D[27] => CLK 10 posedge tch_tdh_fall)
setup (D[28] => CLK 01 posedge tch_tds_rise)
setup (D[28] => CLK 10 posedge tch_tds_fall)
hold (D[28] => CLK 01 posedge tch_tdh_rise)
hold (D[28] => CLK 10 posedge tch_tdh_fall)
setup (D[29] => CLK 01 posedge tch_tds_rise)
setup (D[29] => CLK 10 posedge tch_tds_fall)
hold (D[29] => CLK 01 posedge tch_tdh_rise)
hold (D[29] => CLK 10 posedge tch_tdh_fall)
setup (D[30] => CLK 01 posedge tch_tds_rise)
setup (D[30] => CLK 10 posedge tch_tds_fall)
hold (D[30] => CLK 01 posedge tch_tdh_rise)
hold (D[30] => CLK 10 posedge tch_tdh_fall)
setup (D[31] => CLK 01 posedge tch_tds_rise)
setup (D[31] => CLK 10 posedge tch_tds_fall)
hold (D[31] => CLK 01 posedge tch_tdh_rise)
hold (D[31] => CLK 10 posedge tch_tdh_fall)
setup (WEN[0] => CLK 01 posedge tch_tws_rise)
setup (WEN[0] => CLK 10 posedge tch_tws_fall)
hold (WEN[0] => CLK 01 posedge tch_twh_rise)
hold (WEN[0] => CLK 10 posedge tch_twh_fall)
setup (WEN[1] => CLK 01 posedge tch_tws_rise)
setup (WEN[1] => CLK 10 posedge tch_tws_fall)
hold (WEN[1] => CLK 01 posedge tch_twh_rise)
hold (WEN[1] => CLK 10 posedge tch_twh_fall)
setup (WEN[2] => CLK 01 posedge tch_tws_rise)
setup (WEN[2] => CLK 10 posedge tch_tws_fall)
hold (WEN[2] => CLK 01 posedge tch_twh_rise)
hold (WEN[2] => CLK 10 posedge tch_twh_fall)
setup (WEN[3] => CLK 01 posedge tch_tws_rise)
setup (WEN[3] => CLK 10 posedge tch_tws_fall)
hold (WEN[3] => CLK 01 posedge tch_twh_rise)
hold (WEN[3] => CLK 10 posedge tch_twh_fall)
period (CLK 01 period_tcyc)
mpwl (CLK tpw_tckl)
mpwh (CLK tpw_tckh)
path (CLK => Q[0] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[0] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[1] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[1] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[2] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[2] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[3] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[3] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[4] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[4] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[5] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[5] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[6] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[6] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[7] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[7] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[8] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[8] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[9] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[9] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[10] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[10] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[11] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[11] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[12] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[12] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[13] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[13] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[14] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[14] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[15] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[15] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[16] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[16] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[17] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[17] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[18] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[18] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[19] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[19] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[20] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[20] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[21] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[21] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[22] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[22] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[23] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[23] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[24] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[24] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[25] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[25] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[26] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[26] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[27] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[27] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[28] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[28] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[29] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[29] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[30] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[30] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (CLK => Q[31] 01 01 delay(dly_f_tanpr) slew(sl_qr))
path (CLK => Q[31] 01 10 delay(dly_f_tanpf) slew(sl_qf))
path (OEN => Q[0] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[0] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[0] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[0] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[1] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[1] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[1] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[1] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[2] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[2] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[2] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[2] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[3] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[3] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[3] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[3] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[4] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[4] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[4] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[4] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[5] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[5] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[5] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[5] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[6] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[6] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[6] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[6] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[7] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[7] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[7] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[7] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[8] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[8] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[8] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[8] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[9] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[9] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[9] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[9] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[10] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[10] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[10] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[10] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[11] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[11] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[11] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[11] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[12] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[12] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[12] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[12] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[13] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[13] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[13] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[13] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[14] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[14] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[14] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[14] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[15] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[15] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[15] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[15] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[16] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[16] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[16] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[16] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[17] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[17] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[17] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[17] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[18] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[18] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[18] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[18] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[19] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[19] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[19] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[19] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[20] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[20] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[20] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[20] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[21] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[21] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[21] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[21] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[22] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[22] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[22] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[22] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[23] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[23] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[23] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[23] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[24] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[24] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[24] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[24] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[25] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[25] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[25] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[25] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[26] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[26] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[26] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[26] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[27] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[27] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[27] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[27] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[28] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[28] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[28] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[28] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[29] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[29] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[29] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[29] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[30] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[30] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[30] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[30] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[31] 01 0z delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[31] 01 z1 delay(dly_f_tl_zr) slew(sl_qr))
path (OEN => Q[31] 01 1z delay(dly_f_tl_zf) slew(sl_qf))
path (OEN => Q[31] 01 z0 delay(dly_f_tl_zf) slew(sl_qf))
)
