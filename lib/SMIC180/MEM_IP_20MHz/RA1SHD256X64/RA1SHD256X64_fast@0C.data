/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD256X64 -words 256 -bits 64 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  RA1SHD256X64
 *      Words:          256
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        fast@0C
 *      Delays:		min
 *
 *      Creation Date:  2002-06-03 12:41:22Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "fast@0C";
DESIGN              "RA1SHD256X64";

CELLDATA
area                   : 181706.629;
default_max_transition : 2.200;
ENDCELLDATA

PORTDATA
Q[63:0] : CAP(0.023), MAXCAP(0.823);
A[7:0] : CAP(0.055);
CEN : CAP(0.015);
CLK : CAP(0.283), MAXTRANS(2.200);
D[63:0] : CAP(0.005);
WEN[7:0] : CAP(0.123);
OEN : CAP(0.010);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(RA1SHD256X64_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X64_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X64_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.199, 0.199, 0.200, 0.200, 0.202, 0.227, 0.309", \
			  "0.197, 0.197, 0.198, 0.199, 0.200, 0.225, 0.307", \
			  "0.191, 0.191, 0.191, 0.192, 0.193, 0.218, 0.300", \
			  "0.182, 0.182, 0.182, 0.183, 0.184, 0.210, 0.291", \
			  "0.159, 0.159, 0.160, 0.160, 0.162, 0.187, 0.269", \
			  "0.141, 0.141, 0.142, 0.142, 0.144, 0.169, 0.251", \
			  "0.101, 0.101, 0.101, 0.102, 0.104, 0.129, 0.211" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.199, 0.199, 0.200, 0.200, 0.202, 0.227, 0.309", \
			  "0.197, 0.197, 0.198, 0.199, 0.200, 0.225, 0.307", \
			  "0.191, 0.191, 0.191, 0.192, 0.193, 0.218, 0.300", \
			  "0.182, 0.182, 0.182, 0.183, 0.184, 0.210, 0.291", \
			  "0.159, 0.159, 0.160, 0.160, 0.162, 0.187, 0.269", \
			  "0.141, 0.141, 0.142, 0.142, 0.144, 0.169, 0.251", \
			  "0.101, 0.101, 0.101, 0.102, 0.104, 0.129, 0.211" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.031, 0.031, 0.031, 0.030, 0.029, 0.027, 0.024", \
			  "0.033, 0.033, 0.033, 0.032, 0.030, 0.029, 0.026", \
			  "0.040, 0.040, 0.039, 0.039, 0.037, 0.036, 0.033", \
			  "0.049, 0.049, 0.048, 0.048, 0.046, 0.045, 0.042", \
			  "0.071, 0.071, 0.071, 0.070, 0.068, 0.067, 0.064", \
			  "0.089, 0.089, 0.089, 0.088, 0.086, 0.085, 0.082", \
			  "0.130, 0.130, 0.129, 0.128, 0.127, 0.126, 0.123" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.017, 0.014, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.016, 0.002, 0.000, 0.000, 0.000, 0.000", \
			  "0.026, 0.022, 0.009, 0.000, 0.000, 0.000, 0.000", \
			  "0.035, 0.031, 0.018, 0.000, 0.000, 0.000, 0.000", \
			  "0.057, 0.054, 0.040, 0.022, 0.000, 0.000, 0.000", \
			  "0.075, 0.072, 0.058, 0.040, 0.000, 0.000, 0.000", \
			  "0.116, 0.112, 0.098, 0.080, 0.035, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.301, 0.301, 0.302, 0.304, 0.308, 0.339, 0.439", \
			  "0.299, 0.299, 0.301, 0.302, 0.306, 0.338, 0.437", \
			  "0.292, 0.293, 0.294, 0.295, 0.299, 0.331, 0.431", \
			  "0.283, 0.284, 0.285, 0.286, 0.290, 0.322, 0.422", \
			  "0.261, 0.261, 0.262, 0.264, 0.268, 0.299, 0.399", \
			  "0.243, 0.243, 0.244, 0.246, 0.250, 0.281, 0.381", \
			  "0.203, 0.203, 0.204, 0.206, 0.209, 0.241, 0.341" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.301, 0.301, 0.302, 0.304, 0.308, 0.339, 0.439", \
			  "0.299, 0.299, 0.301, 0.302, 0.306, 0.338, 0.437", \
			  "0.292, 0.293, 0.294, 0.295, 0.299, 0.331, 0.431", \
			  "0.283, 0.284, 0.285, 0.286, 0.290, 0.322, 0.422", \
			  "0.261, 0.261, 0.262, 0.264, 0.268, 0.299, 0.399", \
			  "0.243, 0.243, 0.244, 0.246, 0.250, 0.281, 0.381", \
			  "0.203, 0.203, 0.204, 0.206, 0.209, 0.241, 0.341" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.011, 0.010, 0.009, 0.005, 0.002, 0.000", \
			  "0.029, 0.029, 0.028, 0.027, 0.023, 0.020, 0.013", \
			  "0.070, 0.069, 0.068, 0.067, 0.063, 0.060, 0.053" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.011, 0.010, 0.009, 0.005, 0.002, 0.000", \
			  "0.029, 0.029, 0.028, 0.027, 0.023, 0.020, 0.013", \
			  "0.070, 0.069, 0.068, 0.067, 0.063, 0.060, 0.053" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.134, 0.135, 0.137, 0.139, 0.210, 0.268, 0.398", \
			  "0.133, 0.133, 0.135, 0.137, 0.208, 0.266, 0.396", \
			  "0.126, 0.126, 0.128, 0.131, 0.201, 0.259, 0.389", \
			  "0.117, 0.117, 0.119, 0.122, 0.192, 0.250, 0.380", \
			  "0.094, 0.095, 0.097, 0.099, 0.170, 0.228, 0.358", \
			  "0.076, 0.077, 0.079, 0.081, 0.152, 0.210, 0.340", \
			  "0.036, 0.037, 0.038, 0.041, 0.111, 0.169, 0.300" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.134, 0.135, 0.137, 0.139, 0.210, 0.268, 0.398", \
			  "0.133, 0.133, 0.135, 0.137, 0.208, 0.266, 0.396", \
			  "0.126, 0.126, 0.128, 0.131, 0.201, 0.259, 0.389", \
			  "0.117, 0.117, 0.119, 0.122, 0.192, 0.250, 0.380", \
			  "0.094, 0.095, 0.097, 0.099, 0.170, 0.228, 0.358", \
			  "0.076, 0.077, 0.079, 0.081, 0.152, 0.210, 0.340", \
			  "0.036, 0.037, 0.038, 0.041, 0.111, 0.169, 0.300" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.004, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.032, 0.027, 0.005, 0.000, 0.000, 0.000, 0.000", \
			  "0.050, 0.044, 0.023, 0.000, 0.000, 0.000, 0.000", \
			  "0.091, 0.085, 0.063, 0.034, 0.012, 0.007, 0.000" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.004, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.032, 0.027, 0.005, 0.000, 0.000, 0.000, 0.000", \
			  "0.050, 0.044, 0.023, 0.000, 0.000, 0.000, 0.000", \
			  "0.091, 0.085, 0.063, 0.034, 0.012, 0.007, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tws:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.164, 0.165, 0.179, 0.203, 0.264, 0.312, 0.421", \
			  "0.162, 0.163, 0.177, 0.202, 0.262, 0.310, 0.419", \
			  "0.155, 0.156, 0.171, 0.195, 0.255, 0.304, 0.412", \
			  "0.146, 0.147, 0.162, 0.186, 0.246, 0.295, 0.403", \
			  "0.124, 0.125, 0.139, 0.163, 0.224, 0.272, 0.381", \
			  "0.106, 0.107, 0.121, 0.146, 0.206, 0.254, 0.363", \
			  "0.081, 0.082, 0.087, 0.105, 0.166, 0.214, 0.323" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.164, 0.165, 0.179, 0.203, 0.264, 0.312, 0.421", \
			  "0.162, 0.163, 0.177, 0.202, 0.262, 0.310, 0.419", \
			  "0.155, 0.156, 0.171, 0.195, 0.255, 0.304, 0.412", \
			  "0.146, 0.147, 0.162, 0.186, 0.246, 0.295, 0.403", \
			  "0.124, 0.125, 0.139, 0.163, 0.224, 0.272, 0.381", \
			  "0.106, 0.107, 0.121, 0.146, 0.206, 0.254, 0.363", \
			  "0.081, 0.082, 0.087, 0.105, 0.166, 0.214, 0.323" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA



ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("0.831")
			}
			fall_constraint(scalar) {
				values ("0.831")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.121")
			}
			fall_constraint(scalar) {
				values ("0.121")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.087")
			}
			fall_constraint(scalar) {
				values ("0.087")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.825, 0.827, 0.833, 0.842, 0.871, 0.923, 0.976", \
			  "0.826, 0.829, 0.835, 0.844, 0.872, 0.925, 0.978", \
			  "0.833, 0.836, 0.842, 0.851, 0.879, 0.932, 0.984", \
			  "0.842, 0.845, 0.851, 0.860, 0.888, 0.941, 0.993", \
			  "0.865, 0.867, 0.873, 0.882, 0.911, 0.963, 1.016", \
			  "0.883, 0.885, 0.891, 0.900, 0.929, 0.981, 1.034", \
			  "0.923, 0.926, 0.931, 0.941, 0.969, 1.021, 1.074" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.825, 0.827, 0.833, 0.842, 0.871, 0.923, 0.976", \
			  "0.826, 0.829, 0.835, 0.844, 0.872, 0.925, 0.978", \
			  "0.833, 0.836, 0.842, 0.851, 0.879, 0.932, 0.984", \
			  "0.842, 0.845, 0.851, 0.860, 0.888, 0.941, 0.993", \
			  "0.865, 0.867, 0.873, 0.882, 0.911, 0.963, 1.016", \
			  "0.883, 0.885, 0.891, 0.900, 0.929, 0.981, 1.034", \
			  "0.923, 0.926, 0.931, 0.941, 0.969, 1.021, 1.074" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
			}
ENDARCDATA
ARCDATA
dly_tlzl:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.386, 0.389, 0.397, 0.410, 0.449, 0.469, 0.469", \
			  "0.392, 0.394, 0.402, 0.415, 0.455, 0.471, 0.471", \
			  "0.412, 0.415, 0.423, 0.436, 0.475, 0.478, 0.478", \
			  "0.440, 0.442, 0.450, 0.463, 0.487, 0.487, 0.487", \
			  "0.508, 0.510, 0.510, 0.510, 0.510, 0.510, 0.510", \
			  "0.529, 0.529, 0.529, 0.529, 0.529, 0.529, 0.529", \
			  "0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.352, 0.354, 0.360, 0.369, 0.397, 0.450, 0.469", \
			  "0.358, 0.360, 0.365, 0.375, 0.403, 0.455, 0.471", \
			  "0.378, 0.380, 0.386, 0.395, 0.423, 0.476, 0.478", \
			  "0.406, 0.408, 0.413, 0.423, 0.451, 0.487, 0.487", \
			  "0.474, 0.476, 0.482, 0.491, 0.510, 0.510, 0.510", \
			  "0.529, 0.529, 0.529, 0.529, 0.529, 0.529, 0.529", \
			  "0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
			}
ENDARCDATA

ARCDATA
dly_tlzh:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.386, 0.389, 0.397, 0.410, 0.449, 0.469, 0.469", \
			  "0.392, 0.394, 0.402, 0.415, 0.455, 0.471, 0.471", \
			  "0.412, 0.415, 0.423, 0.436, 0.475, 0.478, 0.478", \
			  "0.440, 0.442, 0.450, 0.463, 0.487, 0.487, 0.487", \
			  "0.508, 0.510, 0.510, 0.510, 0.510, 0.510, 0.510", \
			  "0.529, 0.529, 0.529, 0.529, 0.529, 0.529, 0.529", \
			  "0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.352, 0.354, 0.360, 0.369, 0.397, 0.450, 0.469", \
			  "0.358, 0.360, 0.365, 0.375, 0.403, 0.455, 0.471", \
			  "0.378, 0.380, 0.386, 0.395, 0.423, 0.476, 0.478", \
			  "0.406, 0.408, 0.413, 0.423, 0.451, 0.487, 0.487", \
			  "0.474, 0.476, 0.482, 0.491, 0.510, 0.510, 0.510", \
			  "0.529, 0.529, 0.529, 0.529, 0.529, 0.529, 0.529", \
			  "0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
			}
ENDARCDATA

ENDTIMINGDATA
ENDMODELDATA
