/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD256X64 -words 256 -bits 64 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  RA1SHD256X64
 *      Words:          256
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        fast@-40C
 *      Delays:		min
 *
 *      Creation Date:  2002-06-03 12:41:13Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "fast@-40C";
DESIGN              "RA1SHD256X64";

CELLDATA
area                   : 181706.629;
default_max_transition : 2.200;
ENDCELLDATA

PORTDATA
Q[63:0] : CAP(0.022), MAXCAP(0.822);
A[7:0] : CAP(0.055);
CEN : CAP(0.015);
CLK : CAP(0.280), MAXTRANS(2.200);
D[63:0] : CAP(0.005);
WEN[7:0] : CAP(0.123);
OEN : CAP(0.010);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(RA1SHD256X64_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X64_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X64_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.183, 0.183, 0.183, 0.183, 0.185, 0.222, 0.306", \
			  "0.182, 0.182, 0.181, 0.181, 0.183, 0.220, 0.304", \
			  "0.175, 0.175, 0.175, 0.174, 0.177, 0.214, 0.298", \
			  "0.167, 0.167, 0.166, 0.166, 0.168, 0.206, 0.289", \
			  "0.146, 0.146, 0.145, 0.145, 0.147, 0.184, 0.268", \
			  "0.129, 0.129, 0.128, 0.128, 0.130, 0.167, 0.251", \
			  "0.091, 0.090, 0.090, 0.090, 0.092, 0.129, 0.213" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.183, 0.183, 0.183, 0.183, 0.185, 0.222, 0.306", \
			  "0.182, 0.182, 0.181, 0.181, 0.183, 0.220, 0.304", \
			  "0.175, 0.175, 0.175, 0.174, 0.177, 0.214, 0.298", \
			  "0.167, 0.167, 0.166, 0.166, 0.168, 0.206, 0.289", \
			  "0.146, 0.146, 0.145, 0.145, 0.147, 0.184, 0.268", \
			  "0.129, 0.129, 0.128, 0.128, 0.130, 0.167, 0.251", \
			  "0.091, 0.090, 0.090, 0.090, 0.092, 0.129, 0.213" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.027, 0.027, 0.027, 0.028, 0.029, 0.029, 0.031", \
			  "0.028, 0.029, 0.029, 0.029, 0.030, 0.031, 0.033", \
			  "0.035, 0.035, 0.035, 0.036, 0.037, 0.037, 0.039", \
			  "0.043, 0.043, 0.044, 0.044, 0.045, 0.046, 0.048", \
			  "0.064, 0.065, 0.065, 0.065, 0.066, 0.067, 0.069", \
			  "0.081, 0.081, 0.082, 0.082, 0.083, 0.084, 0.086", \
			  "0.120, 0.120, 0.120, 0.120, 0.121, 0.122, 0.124" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.017, 0.014, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.015, 0.001, 0.000, 0.000, 0.000, 0.000", \
			  "0.025, 0.022, 0.008, 0.000, 0.000, 0.000, 0.000", \
			  "0.034, 0.030, 0.016, 0.000, 0.000, 0.000, 0.000", \
			  "0.055, 0.051, 0.037, 0.019, 0.000, 0.000, 0.000", \
			  "0.072, 0.068, 0.054, 0.036, 0.000, 0.000, 0.000", \
			  "0.110, 0.106, 0.093, 0.074, 0.027, 0.000, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.279, 0.279, 0.279, 0.279, 0.281, 0.327, 0.429", \
			  "0.277, 0.277, 0.277, 0.278, 0.280, 0.325, 0.427", \
			  "0.271, 0.271, 0.271, 0.271, 0.273, 0.319, 0.421", \
			  "0.262, 0.262, 0.263, 0.263, 0.265, 0.310, 0.412", \
			  "0.241, 0.241, 0.241, 0.242, 0.244, 0.289, 0.391", \
			  "0.224, 0.224, 0.224, 0.225, 0.227, 0.272, 0.374", \
			  "0.186, 0.186, 0.186, 0.187, 0.189, 0.234, 0.336" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.279, 0.279, 0.279, 0.279, 0.281, 0.327, 0.429", \
			  "0.277, 0.277, 0.277, 0.278, 0.280, 0.325, 0.427", \
			  "0.271, 0.271, 0.271, 0.271, 0.273, 0.319, 0.421", \
			  "0.262, 0.262, 0.263, 0.263, 0.265, 0.310, 0.412", \
			  "0.241, 0.241, 0.241, 0.242, 0.244, 0.289, 0.391", \
			  "0.224, 0.224, 0.224, 0.225, 0.227, 0.272, 0.374", \
			  "0.186, 0.186, 0.186, 0.187, 0.189, 0.234, 0.336" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.008, 0.007, 0.007, 0.007, 0.006, 0.005, 0.003", \
			  "0.024, 0.024, 0.024, 0.024, 0.023, 0.022, 0.020", \
			  "0.063, 0.063, 0.062, 0.062, 0.061, 0.060, 0.058" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.008, 0.007, 0.007, 0.007, 0.006, 0.005, 0.003", \
			  "0.024, 0.024, 0.024, 0.024, 0.023, 0.022, 0.020", \
			  "0.063, 0.063, 0.062, 0.062, 0.061, 0.060, 0.058" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.125, 0.125, 0.126, 0.132, 0.205, 0.263, 0.394", \
			  "0.123, 0.124, 0.125, 0.130, 0.203, 0.261, 0.393", \
			  "0.117, 0.117, 0.118, 0.124, 0.197, 0.255, 0.386", \
			  "0.109, 0.109, 0.110, 0.115, 0.188, 0.246, 0.378", \
			  "0.087, 0.088, 0.089, 0.094, 0.167, 0.225, 0.357", \
			  "0.071, 0.071, 0.072, 0.077, 0.150, 0.208, 0.340", \
			  "0.032, 0.033, 0.034, 0.039, 0.112, 0.170, 0.302" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.125, 0.125, 0.126, 0.132, 0.205, 0.263, 0.394", \
			  "0.123, 0.124, 0.125, 0.130, 0.203, 0.261, 0.393", \
			  "0.117, 0.117, 0.118, 0.124, 0.197, 0.255, 0.386", \
			  "0.109, 0.109, 0.110, 0.115, 0.188, 0.246, 0.378", \
			  "0.087, 0.088, 0.089, 0.094, 0.167, 0.225, 0.357", \
			  "0.071, 0.071, 0.072, 0.077, 0.150, 0.208, 0.340", \
			  "0.032, 0.033, 0.034, 0.039, 0.112, 0.170, 0.302" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.032, 0.026, 0.004, 0.000, 0.000, 0.000, 0.000", \
			  "0.049, 0.043, 0.021, 0.000, 0.000, 0.000, 0.000", \
			  "0.087, 0.081, 0.059, 0.030, 0.011, 0.008, 0.003" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.002, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.032, 0.026, 0.004, 0.000, 0.000, 0.000, 0.000", \
			  "0.049, 0.043, 0.021, 0.000, 0.000, 0.000, 0.000", \
			  "0.087, 0.081, 0.059, 0.030, 0.011, 0.008, 0.003" \
			)
			}
ENDARCDATA

ARCDATA
tch_tws:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.152, 0.153, 0.167, 0.191, 0.253, 0.302, 0.413", \
			  "0.150, 0.151, 0.165, 0.190, 0.251, 0.300, 0.411", \
			  "0.144, 0.145, 0.159, 0.183, 0.245, 0.294, 0.405", \
			  "0.135, 0.136, 0.150, 0.175, 0.236, 0.286, 0.396", \
			  "0.114, 0.115, 0.129, 0.154, 0.215, 0.264, 0.375", \
			  "0.097, 0.098, 0.112, 0.137, 0.198, 0.247, 0.358", \
			  "0.081, 0.082, 0.085, 0.099, 0.160, 0.209, 0.320" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.152, 0.153, 0.167, 0.191, 0.253, 0.302, 0.413", \
			  "0.150, 0.151, 0.165, 0.190, 0.251, 0.300, 0.411", \
			  "0.144, 0.145, 0.159, 0.183, 0.245, 0.294, 0.405", \
			  "0.135, 0.136, 0.150, 0.175, 0.236, 0.286, 0.396", \
			  "0.114, 0.115, 0.129, 0.154, 0.215, 0.264, 0.375", \
			  "0.097, 0.098, 0.112, 0.137, 0.198, 0.247, 0.358", \
			  "0.081, 0.082, 0.085, 0.099, 0.160, 0.209, 0.320" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA



ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("0.770")
			}
			fall_constraint(scalar) {
				values ("0.770")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.112")
			}
			fall_constraint(scalar) {
				values ("0.112")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.080")
			}
			fall_constraint(scalar) {
				values ("0.080")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "0.765, 0.767, 0.775, 0.785, 0.811, 0.861, 0.910", \
			  "0.767, 0.769, 0.776, 0.787, 0.813, 0.862, 0.912", \
			  "0.773, 0.775, 0.783, 0.793, 0.819, 0.869, 0.918", \
			  "0.781, 0.784, 0.791, 0.801, 0.828, 0.877, 0.927", \
			  "0.803, 0.805, 0.812, 0.823, 0.849, 0.898, 0.948", \
			  "0.819, 0.822, 0.829, 0.840, 0.866, 0.915, 0.965", \
			  "0.858, 0.860, 0.868, 0.878, 0.904, 0.954, 1.003" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.051, 0.056, 0.071, 0.096, 0.171, 0.311, 0.451")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "0.765, 0.767, 0.775, 0.785, 0.811, 0.861, 0.910", \
			  "0.767, 0.769, 0.776, 0.787, 0.813, 0.862, 0.912", \
			  "0.773, 0.775, 0.783, 0.793, 0.819, 0.869, 0.918", \
			  "0.781, 0.784, 0.791, 0.801, 0.828, 0.877, 0.927", \
			  "0.803, 0.805, 0.812, 0.823, 0.849, 0.898, 0.948", \
			  "0.819, 0.822, 0.829, 0.840, 0.866, 0.915, 0.965", \
			  "0.858, 0.860, 0.868, 0.878, 0.904, 0.954, 1.003" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.030, 0.033, 0.041, 0.054, 0.094, 0.169, 0.243")
			}
ENDARCDATA
ARCDATA
dly_tlzl:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.366, 0.369, 0.376, 0.389, 0.426, 0.442, 0.442", \
			  "0.372, 0.375, 0.382, 0.394, 0.432, 0.444, 0.444", \
			  "0.393, 0.395, 0.403, 0.415, 0.449, 0.449, 0.449", \
			  "0.421, 0.423, 0.431, 0.443, 0.457, 0.457, 0.457", \
			  "0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477", \
			  "0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493", \
			  "0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.051, 0.056, 0.071, 0.096, 0.171, 0.311, 0.451")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.331, 0.333, 0.338, 0.347, 0.373, 0.423, 0.442", \
			  "0.337, 0.338, 0.344, 0.353, 0.379, 0.428, 0.444", \
			  "0.358, 0.359, 0.365, 0.373, 0.400, 0.449, 0.449", \
			  "0.385, 0.387, 0.392, 0.401, 0.428, 0.457, 0.457", \
			  "0.455, 0.457, 0.462, 0.471, 0.477, 0.477, 0.477", \
			  "0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493", \
			  "0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.030, 0.033, 0.041, 0.054, 0.094, 0.169, 0.243")
			}
ENDARCDATA

ARCDATA
dly_tlzh:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.366, 0.369, 0.376, 0.389, 0.426, 0.442, 0.442", \
			  "0.372, 0.375, 0.382, 0.394, 0.432, 0.444, 0.444", \
			  "0.393, 0.395, 0.403, 0.415, 0.449, 0.449, 0.449", \
			  "0.421, 0.423, 0.431, 0.443, 0.457, 0.457, 0.457", \
			  "0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477", \
			  "0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493", \
			  "0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.051, 0.056, 0.071, 0.096, 0.171, 0.311, 0.451")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.331, 0.333, 0.338, 0.347, 0.373, 0.423, 0.442", \
			  "0.337, 0.338, 0.344, 0.353, 0.379, 0.428, 0.444", \
			  "0.358, 0.359, 0.365, 0.373, 0.400, 0.449, 0.449", \
			  "0.385, 0.387, 0.392, 0.401, 0.428, 0.457, 0.457", \
			  "0.455, 0.457, 0.462, 0.471, 0.477, 0.477, 0.477", \
			  "0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493", \
			  "0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.030, 0.033, 0.041, 0.054, 0.094, 0.169, 0.243")
			}
ENDARCDATA

ENDTIMINGDATA
ENDMODELDATA
