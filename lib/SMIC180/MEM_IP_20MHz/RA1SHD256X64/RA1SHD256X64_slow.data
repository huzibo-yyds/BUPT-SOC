/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD256X64 -words 256 -bits 64 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  RA1SHD256X64
 *      Words:          256
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2002-06-03 12:41:40Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "slow";
DESIGN              "RA1SHD256X64";

CELLDATA
area                   : 181706.629;
default_max_transition : 4.000;
ENDCELLDATA

PORTDATA
Q[63:0] : CAP(0.022), MAXCAP(0.822);
A[7:0] : CAP(0.054);
CEN : CAP(0.015);
CLK : CAP(0.266), MAXTRANS(4.000);
D[63:0] : CAP(0.004);
WEN[7:0] : CAP(0.121);
OEN : CAP(0.010);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(RA1SHD256X64_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X64_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X64_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.590, 0.592, 0.599, 0.612, 0.644, 0.707, 0.770", \
			  "0.584, 0.586, 0.592, 0.606, 0.637, 0.701, 0.764", \
			  "0.559, 0.561, 0.568, 0.581, 0.613, 0.676, 0.739", \
			  "0.510, 0.512, 0.519, 0.533, 0.564, 0.627, 0.690", \
			  "0.396, 0.398, 0.405, 0.419, 0.450, 0.513, 0.576", \
			  "0.169, 0.170, 0.177, 0.191, 0.222, 0.285, 0.349", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.057, 0.121" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.590, 0.592, 0.599, 0.612, 0.644, 0.707, 0.770", \
			  "0.584, 0.586, 0.592, 0.606, 0.637, 0.701, 0.764", \
			  "0.559, 0.561, 0.568, 0.581, 0.613, 0.676, 0.739", \
			  "0.510, 0.512, 0.519, 0.533, 0.564, 0.627, 0.690", \
			  "0.396, 0.398, 0.405, 0.419, 0.450, 0.513, 0.576", \
			  "0.169, 0.170, 0.177, 0.191, 0.222, 0.285, 0.349", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.057, 0.121" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.033, 0.031, 0.024, 0.011, 0.000, 0.000, 0.000", \
			  "0.039, 0.037, 0.031, 0.017, 0.000, 0.000, 0.000", \
			  "0.064, 0.062, 0.055, 0.042, 0.010, 0.000, 0.000", \
			  "0.112, 0.111, 0.104, 0.090, 0.059, 0.000, 0.000", \
			  "0.226, 0.225, 0.218, 0.204, 0.173, 0.110, 0.046", \
			  "0.454, 0.453, 0.446, 0.432, 0.401, 0.338, 0.274", \
			  "0.682, 0.680, 0.674, 0.660, 0.629, 0.565, 0.502" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.001, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.026, 0.023, 0.012, 0.000, 0.000, 0.000, 0.000", \
			  "0.075, 0.072, 0.061, 0.039, 0.000, 0.000, 0.000", \
			  "0.189, 0.186, 0.175, 0.153, 0.103, 0.002, 0.000", \
			  "0.416, 0.414, 0.403, 0.381, 0.331, 0.230, 0.129", \
			  "0.644, 0.642, 0.631, 0.609, 0.559, 0.458, 0.357" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.662, 0.664, 0.672, 0.688, 0.726, 0.802, 0.886", \
			  "0.656, 0.658, 0.666, 0.682, 0.720, 0.795, 0.879", \
			  "0.631, 0.633, 0.641, 0.658, 0.695, 0.771, 0.855", \
			  "0.582, 0.584, 0.593, 0.609, 0.646, 0.722, 0.806", \
			  "0.468, 0.470, 0.479, 0.495, 0.533, 0.608, 0.692", \
			  "0.240, 0.243, 0.251, 0.267, 0.305, 0.380, 0.464", \
			  "0.012, 0.015, 0.023, 0.039, 0.077, 0.152, 0.236" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.662, 0.664, 0.672, 0.688, 0.726, 0.802, 0.886", \
			  "0.656, 0.658, 0.666, 0.682, 0.720, 0.795, 0.879", \
			  "0.631, 0.633, 0.641, 0.658, 0.695, 0.771, 0.855", \
			  "0.582, 0.584, 0.593, 0.609, 0.646, 0.722, 0.806", \
			  "0.468, 0.470, 0.479, 0.495, 0.533, 0.608, 0.692", \
			  "0.240, 0.243, 0.251, 0.267, 0.305, 0.380, 0.464", \
			  "0.012, 0.015, 0.023, 0.039, 0.077, 0.152, 0.236" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.118, 0.116, 0.108, 0.091, 0.054, 0.000, 0.000", \
			  "0.346, 0.344, 0.336, 0.319, 0.282, 0.206, 0.131", \
			  "0.574, 0.572, 0.563, 0.547, 0.510, 0.434, 0.358" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.118, 0.116, 0.108, 0.091, 0.054, 0.000, 0.000", \
			  "0.346, 0.344, 0.336, 0.319, 0.282, 0.206, 0.131", \
			  "0.574, 0.572, 0.563, 0.547, 0.510, 0.434, 0.358" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.369, 0.371, 0.381, 0.401, 0.447, 0.549, 0.734", \
			  "0.362, 0.365, 0.374, 0.394, 0.440, 0.542, 0.727", \
			  "0.338, 0.340, 0.350, 0.370, 0.416, 0.518, 0.703", \
			  "0.289, 0.291, 0.301, 0.321, 0.367, 0.469, 0.654", \
			  "0.175, 0.177, 0.187, 0.207, 0.253, 0.355, 0.540", \
			  "0.000, 0.000, 0.000, 0.000, 0.025, 0.127, 0.312", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.084" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.369, 0.371, 0.381, 0.401, 0.447, 0.549, 0.734", \
			  "0.362, 0.365, 0.374, 0.394, 0.440, 0.542, 0.727", \
			  "0.338, 0.340, 0.350, 0.370, 0.416, 0.518, 0.703", \
			  "0.289, 0.291, 0.301, 0.321, 0.367, 0.469, 0.654", \
			  "0.175, 0.177, 0.187, 0.207, 0.253, 0.355, 0.540", \
			  "0.000, 0.000, 0.000, 0.000, 0.025, 0.127, 0.312", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.084" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.030, 0.024, 0.004, 0.000, 0.000, 0.000, 0.000", \
			  "0.144, 0.138, 0.118, 0.079, 0.000, 0.000, 0.000", \
			  "0.371, 0.366, 0.346, 0.307, 0.214, 0.029, 0.000", \
			  "0.599, 0.594, 0.574, 0.535, 0.442, 0.257, 0.163" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.030, 0.024, 0.004, 0.000, 0.000, 0.000, 0.000", \
			  "0.144, 0.138, 0.118, 0.079, 0.000, 0.000, 0.000", \
			  "0.371, 0.366, 0.346, 0.307, 0.214, 0.029, 0.000", \
			  "0.599, 0.594, 0.574, 0.535, 0.442, 0.257, 0.163" \
			)
			}
ENDARCDATA

ARCDATA
tch_tws:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.445, 0.449, 0.461, 0.485, 0.541, 0.672, 0.822", \
			  "0.439, 0.442, 0.454, 0.478, 0.534, 0.665, 0.815", \
			  "0.414, 0.418, 0.430, 0.454, 0.510, 0.641, 0.791", \
			  "0.366, 0.369, 0.381, 0.405, 0.461, 0.592, 0.742", \
			  "0.265, 0.268, 0.280, 0.304, 0.360, 0.478, 0.628", \
			  "0.265, 0.268, 0.280, 0.304, 0.360, 0.472, 0.584", \
			  "0.265, 0.268, 0.280, 0.304, 0.360, 0.472, 0.584" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.445, 0.449, 0.461, 0.485, 0.541, 0.672, 0.822", \
			  "0.439, 0.442, 0.454, 0.478, 0.534, 0.665, 0.815", \
			  "0.414, 0.418, 0.430, 0.454, 0.510, 0.641, 0.791", \
			  "0.366, 0.369, 0.381, 0.405, 0.461, 0.592, 0.742", \
			  "0.265, 0.268, 0.280, 0.304, 0.360, 0.478, 0.628", \
			  "0.265, 0.268, 0.280, 0.304, 0.360, 0.472, 0.584", \
			  "0.265, 0.268, 0.280, 0.304, 0.360, 0.472, 0.584" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.101, 0.097, 0.081, 0.049, 0.000, 0.000, 0.000", \
			  "0.329, 0.325, 0.309, 0.277, 0.205, 0.093, 0.000" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.101, 0.097, 0.081, 0.049, 0.000, 0.000, 0.000", \
			  "0.329, 0.325, 0.309, 0.277, 0.205, 0.093, 0.000" \
			)
			}
ENDARCDATA



ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("2.096")
			}
			fall_constraint(scalar) {
				values ("2.096")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.311")
			}
			fall_constraint(scalar) {
				values ("0.311")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.209")
			}
			fall_constraint(scalar) {
				values ("0.209")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "2.124, 2.129, 2.145, 2.172, 2.253, 2.405, 2.556", \
			  "2.130, 2.136, 2.152, 2.179, 2.260, 2.411, 2.562", \
			  "2.155, 2.160, 2.176, 2.203, 2.284, 2.436, 2.587", \
			  "2.204, 2.209, 2.225, 2.252, 2.333, 2.484, 2.636", \
			  "2.318, 2.323, 2.339, 2.366, 2.447, 2.598, 2.750", \
			  "2.546, 2.551, 2.567, 2.594, 2.675, 2.826, 2.977", \
			  "2.773, 2.779, 2.795, 2.822, 2.903, 3.054, 3.205" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "2.127, 2.131, 2.143, 2.161, 2.218, 2.324, 2.430", \
			  "2.134, 2.138, 2.149, 2.168, 2.225, 2.331, 2.436", \
			  "2.158, 2.162, 2.173, 2.192, 2.249, 2.355, 2.461", \
			  "2.207, 2.211, 2.222, 2.241, 2.298, 2.404, 2.510", \
			  "2.321, 2.325, 2.336, 2.355, 2.412, 2.518, 2.624", \
			  "2.549, 2.553, 2.564, 2.583, 2.640, 2.746, 2.852", \
			  "2.777, 2.781, 2.792, 2.811, 2.868, 2.974, 3.079" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
			}
ENDARCDATA
ARCDATA
dly_tlzl:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "1.021, 1.021, 1.021, 1.021, 1.021, 1.134, 1.285", \
			  "1.025, 1.025, 1.025, 1.025, 1.025, 1.139, 1.290", \
			  "1.039, 1.039, 1.039, 1.039, 1.039, 1.159, 1.310", \
			  "1.069, 1.069, 1.069, 1.069, 1.069, 1.197, 1.348", \
			  "1.139, 1.139, 1.139, 1.139, 1.139, 1.287, 1.438", \
			  "1.278, 1.278, 1.278, 1.278, 1.315, 1.467, 1.618", \
			  "1.417, 1.417, 1.417, 1.417, 1.495, 1.646, 1.797" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.088", \
			  "1.025, 1.025, 1.025, 1.025, 1.025, 1.025, 1.094", \
			  "1.039, 1.039, 1.039, 1.039, 1.039, 1.039, 1.113", \
			  "1.069, 1.069, 1.069, 1.069, 1.069, 1.069, 1.151", \
			  "1.139, 1.139, 1.139, 1.139, 1.139, 1.139, 1.241", \
			  "1.278, 1.278, 1.278, 1.278, 1.278, 1.315, 1.421", \
			  "1.417, 1.417, 1.417, 1.417, 1.417, 1.495, 1.601" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
			}
ENDARCDATA

ARCDATA
dly_tlzh:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "1.021, 1.021, 1.021, 1.021, 1.021, 1.134, 1.285", \
			  "1.025, 1.025, 1.025, 1.025, 1.025, 1.139, 1.290", \
			  "1.039, 1.039, 1.039, 1.039, 1.039, 1.159, 1.310", \
			  "1.069, 1.069, 1.069, 1.069, 1.069, 1.197, 1.348", \
			  "1.139, 1.139, 1.139, 1.139, 1.139, 1.287, 1.438", \
			  "1.278, 1.278, 1.278, 1.278, 1.315, 1.467, 1.618", \
			  "1.417, 1.417, 1.417, 1.417, 1.495, 1.646, 1.797" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.088", \
			  "1.025, 1.025, 1.025, 1.025, 1.025, 1.025, 1.094", \
			  "1.039, 1.039, 1.039, 1.039, 1.039, 1.039, 1.113", \
			  "1.069, 1.069, 1.069, 1.069, 1.069, 1.069, 1.151", \
			  "1.139, 1.139, 1.139, 1.139, 1.139, 1.139, 1.241", \
			  "1.278, 1.278, 1.278, 1.278, 1.278, 1.315, 1.421", \
			  "1.417, 1.417, 1.417, 1.417, 1.417, 1.495, 1.601" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
			}
ENDARCDATA

ENDTIMINGDATA
ENDMODELDATA
