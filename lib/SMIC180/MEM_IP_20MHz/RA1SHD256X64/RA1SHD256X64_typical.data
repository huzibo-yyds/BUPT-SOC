/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD256X64 -words 256 -bits 64 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  RA1SHD256X64
 *      Words:          256
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        typical
 *      Delays:		max
 *
 *      Creation Date:  2002-06-03 12:41:31Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "typical";
DESIGN              "RA1SHD256X64";

CELLDATA
area                   : 181706.629;
default_max_transition : 2.800;
ENDCELLDATA

PORTDATA
Q[63:0] : CAP(0.023), MAXCAP(0.823);
A[7:0] : CAP(0.054);
CEN : CAP(0.015);
CLK : CAP(0.273), MAXTRANS(2.800);
D[63:0] : CAP(0.004);
WEN[7:0] : CAP(0.122);
OEN : CAP(0.010);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(RA1SHD256X64_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X64_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X64_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.301, 0.302, 0.303, 0.306, 0.311, 0.321, 0.394", \
			  "0.297, 0.298, 0.299, 0.301, 0.307, 0.317, 0.390", \
			  "0.292, 0.293, 0.293, 0.296, 0.302, 0.312, 0.385", \
			  "0.271, 0.272, 0.272, 0.275, 0.281, 0.291, 0.364", \
			  "0.229, 0.229, 0.230, 0.233, 0.239, 0.249, 0.322", \
			  "0.155, 0.156, 0.156, 0.159, 0.165, 0.175, 0.248", \
			  "0.008, 0.008, 0.009, 0.012, 0.018, 0.028, 0.101" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.301, 0.302, 0.303, 0.306, 0.311, 0.321, 0.394", \
			  "0.297, 0.298, 0.299, 0.301, 0.307, 0.317, 0.390", \
			  "0.292, 0.293, 0.293, 0.296, 0.302, 0.312, 0.385", \
			  "0.271, 0.272, 0.272, 0.275, 0.281, 0.291, 0.364", \
			  "0.229, 0.229, 0.230, 0.233, 0.239, 0.249, 0.322", \
			  "0.155, 0.156, 0.156, 0.159, 0.165, 0.175, 0.248", \
			  "0.008, 0.008, 0.009, 0.012, 0.018, 0.028, 0.101" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.029, 0.029, 0.028, 0.025, 0.019, 0.009, 0.000", \
			  "0.033, 0.033, 0.032, 0.029, 0.024, 0.013, 0.000", \
			  "0.039, 0.038, 0.037, 0.035, 0.029, 0.019, 0.000", \
			  "0.060, 0.059, 0.058, 0.056, 0.050, 0.040, 0.020", \
			  "0.102, 0.101, 0.101, 0.098, 0.092, 0.082, 0.062", \
			  "0.175, 0.175, 0.174, 0.171, 0.166, 0.156, 0.135", \
			  "0.323, 0.322, 0.321, 0.319, 0.313, 0.303, 0.283" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.009, 0.006, 0.001, 0.000, 0.000, 0.000, 0.000", \
			  "0.013, 0.010, 0.006, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.015, 0.011, 0.000, 0.000, 0.000, 0.000", \
			  "0.040, 0.036, 0.032, 0.014, 0.000, 0.000, 0.000", \
			  "0.082, 0.078, 0.074, 0.056, 0.021, 0.000, 0.000", \
			  "0.156, 0.152, 0.148, 0.130, 0.095, 0.034, 0.000", \
			  "0.303, 0.299, 0.295, 0.277, 0.242, 0.181, 0.059" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.410, 0.411, 0.412, 0.416, 0.424, 0.442, 0.596", \
			  "0.406, 0.406, 0.407, 0.412, 0.420, 0.438, 0.591", \
			  "0.400, 0.401, 0.402, 0.406, 0.415, 0.432, 0.586", \
			  "0.379, 0.380, 0.381, 0.385, 0.394, 0.411, 0.565", \
			  "0.337, 0.338, 0.339, 0.343, 0.351, 0.369, 0.523", \
			  "0.264, 0.264, 0.265, 0.270, 0.278, 0.296, 0.449", \
			  "0.116, 0.117, 0.118, 0.122, 0.130, 0.148, 0.302" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.410, 0.411, 0.412, 0.416, 0.424, 0.442, 0.596", \
			  "0.406, 0.406, 0.407, 0.412, 0.420, 0.438, 0.591", \
			  "0.400, 0.401, 0.402, 0.406, 0.415, 0.432, 0.586", \
			  "0.379, 0.380, 0.381, 0.385, 0.394, 0.411, 0.565", \
			  "0.337, 0.338, 0.339, 0.343, 0.351, 0.369, 0.523", \
			  "0.264, 0.264, 0.265, 0.270, 0.278, 0.296, 0.449", \
			  "0.116, 0.117, 0.118, 0.122, 0.130, 0.148, 0.302" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.023, 0.022, 0.018, 0.010, 0.000, 0.000", \
			  "0.097, 0.097, 0.096, 0.091, 0.083, 0.069, 0.040", \
			  "0.245, 0.244, 0.243, 0.239, 0.230, 0.216, 0.187" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.024, 0.023, 0.022, 0.018, 0.010, 0.000, 0.000", \
			  "0.097, 0.097, 0.096, 0.091, 0.083, 0.069, 0.040", \
			  "0.245, 0.244, 0.243, 0.239, 0.230, 0.216, 0.187" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.219, 0.220, 0.222, 0.228, 0.240, 0.317, 0.518", \
			  "0.215, 0.216, 0.218, 0.224, 0.235, 0.313, 0.514", \
			  "0.210, 0.211, 0.212, 0.218, 0.230, 0.308, 0.508", \
			  "0.189, 0.190, 0.191, 0.197, 0.209, 0.287, 0.487", \
			  "0.147, 0.148, 0.149, 0.155, 0.167, 0.245, 0.445", \
			  "0.073, 0.074, 0.076, 0.082, 0.093, 0.171, 0.372", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.024, 0.224" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.219, 0.220, 0.222, 0.228, 0.240, 0.317, 0.518", \
			  "0.215, 0.216, 0.218, 0.224, 0.235, 0.313, 0.514", \
			  "0.210, 0.211, 0.212, 0.218, 0.230, 0.308, 0.508", \
			  "0.189, 0.190, 0.191, 0.197, 0.209, 0.287, 0.487", \
			  "0.147, 0.148, 0.149, 0.155, 0.167, 0.245, 0.445", \
			  "0.073, 0.074, 0.076, 0.082, 0.093, 0.171, 0.372", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.024, 0.224" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.053, 0.048, 0.041, 0.012, 0.000, 0.000, 0.000", \
			  "0.127, 0.121, 0.114, 0.085, 0.028, 0.000, 0.000", \
			  "0.274, 0.269, 0.261, 0.233, 0.175, 0.127, 0.086" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.053, 0.048, 0.041, 0.012, 0.000, 0.000, 0.000", \
			  "0.127, 0.121, 0.114, 0.085, 0.028, 0.000, 0.000", \
			  "0.274, 0.269, 0.261, 0.233, 0.175, 0.127, 0.086" \
			)
			}
ENDARCDATA

ARCDATA
tch_tws:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.263, 0.265, 0.267, 0.276, 0.316, 0.400, 0.569", \
			  "0.259, 0.261, 0.263, 0.272, 0.311, 0.396, 0.565", \
			  "0.254, 0.255, 0.258, 0.267, 0.306, 0.391, 0.560", \
			  "0.233, 0.234, 0.237, 0.246, 0.285, 0.370, 0.539", \
			  "0.191, 0.192, 0.195, 0.204, 0.243, 0.328, 0.497", \
			  "0.117, 0.119, 0.121, 0.130, 0.169, 0.254, 0.423", \
			  "0.113, 0.114, 0.117, 0.126, 0.144, 0.217, 0.386" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.263, 0.265, 0.267, 0.276, 0.316, 0.400, 0.569", \
			  "0.259, 0.261, 0.263, 0.272, 0.311, 0.396, 0.565", \
			  "0.254, 0.255, 0.258, 0.267, 0.306, 0.391, 0.560", \
			  "0.233, 0.234, 0.237, 0.246, 0.285, 0.370, 0.539", \
			  "0.191, 0.192, 0.195, 0.204, 0.243, 0.328, 0.497", \
			  "0.117, 0.119, 0.121, 0.130, 0.169, 0.254, 0.423", \
			  "0.113, 0.114, 0.117, 0.126, 0.144, 0.217, 0.386" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.123, 0.118, 0.112, 0.088, 0.062, 0.031, 0.000" \
			)
			}
			fall_constraint(RA1SHD256X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.123, 0.118, 0.112, 0.088, 0.062, 0.031, 0.000" \
			)
			}
ENDARCDATA



ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("1.187")
			}
			fall_constraint(scalar) {
				values ("1.187")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.180")
			}
			fall_constraint(scalar) {
				values ("0.180")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.119")
			}
			fall_constraint(scalar) {
				values ("0.119")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "1.254, 1.257, 1.268, 1.286, 1.339, 1.438, 1.537", \
			  "1.258, 1.262, 1.272, 1.290, 1.343, 1.442, 1.541", \
			  "1.263, 1.267, 1.277, 1.295, 1.348, 1.447, 1.547", \
			  "1.284, 1.288, 1.299, 1.316, 1.369, 1.469, 1.568", \
			  "1.326, 1.330, 1.341, 1.358, 1.411, 1.511, 1.610", \
			  "1.400, 1.404, 1.414, 1.432, 1.485, 1.584, 1.683", \
			  "1.547, 1.551, 1.562, 1.579, 1.632, 1.732, 1.831" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.067, 0.074, 0.095, 0.131, 0.237, 0.436, 0.635")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "1.255, 1.257, 1.265, 1.276, 1.312, 1.379, 1.446", \
			  "1.259, 1.262, 1.269, 1.281, 1.316, 1.383, 1.450", \
			  "1.264, 1.267, 1.274, 1.286, 1.322, 1.389, 1.455", \
			  "1.286, 1.288, 1.295, 1.307, 1.343, 1.410, 1.476", \
			  "1.328, 1.330, 1.337, 1.349, 1.385, 1.452, 1.518", \
			  "1.401, 1.404, 1.411, 1.423, 1.459, 1.525, 1.592", \
			  "1.549, 1.551, 1.558, 1.570, 1.606, 1.673, 1.739" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.050, 0.053, 0.064, 0.083, 0.139, 0.242, 0.346")
			}
ENDARCDATA
ARCDATA
dly_tlzl:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.642, 0.642, 0.642, 0.642, 0.642, 0.718, 0.817", \
			  "0.645, 0.645, 0.645, 0.645, 0.645, 0.724, 0.823", \
			  "0.648, 0.648, 0.648, 0.648, 0.648, 0.731, 0.830", \
			  "0.660, 0.660, 0.660, 0.660, 0.660, 0.758, 0.857", \
			  "0.686, 0.686, 0.686, 0.686, 0.714, 0.814, 0.913", \
			  "0.730, 0.730, 0.740, 0.758, 0.811, 0.910, 1.009", \
			  "0.920, 0.923, 0.934, 0.951, 1.005, 1.104, 1.203" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.067, 0.074, 0.095, 0.131, 0.237, 0.436, 0.635")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.680", \
			  "0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.686", \
			  "0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.692", \
			  "0.660, 0.660, 0.660, 0.660, 0.660, 0.660, 0.720", \
			  "0.686, 0.686, 0.686, 0.686, 0.686, 0.709, 0.775", \
			  "0.730, 0.730, 0.730, 0.730, 0.738, 0.805, 0.872", \
			  "0.875, 0.877, 0.884, 0.896, 0.932, 0.999, 1.065" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.050, 0.053, 0.064, 0.083, 0.139, 0.242, 0.346")
			}
ENDARCDATA

ARCDATA
dly_tlzh:
			cell_rise(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.642, 0.642, 0.642, 0.642, 0.642, 0.718, 0.817", \
			  "0.645, 0.645, 0.645, 0.645, 0.645, 0.724, 0.823", \
			  "0.648, 0.648, 0.648, 0.648, 0.648, 0.731, 0.830", \
			  "0.660, 0.660, 0.660, 0.660, 0.660, 0.758, 0.857", \
			  "0.686, 0.686, 0.686, 0.686, 0.714, 0.814, 0.913", \
			  "0.730, 0.730, 0.740, 0.758, 0.811, 0.910, 1.009", \
			  "0.920, 0.923, 0.934, 0.951, 1.005, 1.104, 1.203" \
			)
			}
			rise_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.067, 0.074, 0.095, 0.131, 0.237, 0.436, 0.635")
			}
			cell_fall(RA1SHD256X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.680", \
			  "0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.686", \
			  "0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.692", \
			  "0.660, 0.660, 0.660, 0.660, 0.660, 0.660, 0.720", \
			  "0.686, 0.686, 0.686, 0.686, 0.686, 0.709, 0.775", \
			  "0.730, 0.730, 0.730, 0.730, 0.738, 0.805, 0.872", \
			  "0.875, 0.877, 0.884, 0.896, 0.932, 0.999, 1.065" \
			)
			}
			fall_transition(RA1SHD256X64_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.050, 0.053, 0.064, 0.083, 0.139, 0.242, 0.346")
			}
ENDARCDATA

ENDTIMINGDATA
ENDMODELDATA
