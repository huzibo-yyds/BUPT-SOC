/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD1024X64 -words 1024 -bits 64 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on -libname USERLIB
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD1024X64
 *      Words:          1024
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        fast@0C
 *      Delays:		min
 *
 *      Creation Date:  2002-06-03 12:31:17Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2002-06-03 12:31:17Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2002 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 0.000;
	nom_voltage		: 1.980;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.200;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(fast@0C) {
		process	 : 1;
		temperature	 : 0.000;
		voltage	 : 1.980;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : fast@0C;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD1024X64_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD1024X64_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD1024X64_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD1024X64_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD1024X64_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 64;
		bit_from : 63;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD1024X64_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 10;
		bit_from : 9;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD1024X64_WRITE) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD1024X64) {
	area		 : 474048.560;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 10;
		word_width : 64;
	}
	bus(Q)	 {
		bus_type : RA1SHD1024X64_DATA;
		direction : output;
		max_capacitance : 0.823;
		capacitance : 0.023;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.870, 0.873, 0.880, 0.889, 0.917, 0.970, 1.022", \
			  "0.872, 0.875, 0.881, 0.891, 0.919, 0.972, 1.024", \
			  "0.879, 0.881, 0.888, 0.898, 0.926, 0.978, 1.031", \
			  "0.888, 0.890, 0.897, 0.907, 0.935, 0.987, 1.040", \
			  "0.910, 0.913, 0.920, 0.929, 0.957, 1.010, 1.062", \
			  "0.928, 0.931, 0.938, 0.947, 0.975, 1.028, 1.080", \
			  "0.968, 0.971, 0.978, 0.987, 1.015, 1.068, 1.121" \
			)
			}
			rise_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.870, 0.873, 0.880, 0.889, 0.917, 0.970, 1.022", \
			  "0.872, 0.875, 0.881, 0.891, 0.919, 0.972, 1.024", \
			  "0.879, 0.881, 0.888, 0.898, 0.926, 0.978, 1.031", \
			  "0.888, 0.890, 0.897, 0.907, 0.935, 0.987, 1.040", \
			  "0.910, 0.913, 0.920, 0.929, 0.957, 1.010, 1.062", \
			  "0.928, 0.931, 0.938, 0.947, 0.975, 1.028, 1.080", \
			  "0.968, 0.971, 0.978, 0.987, 1.015, 1.068, 1.121" \
			)
			}
			fall_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.386, 0.389, 0.397, 0.410, 0.449, 0.469, 0.469", \
			  "0.392, 0.394, 0.402, 0.415, 0.455, 0.471, 0.471", \
			  "0.412, 0.415, 0.423, 0.436, 0.475, 0.478, 0.478", \
			  "0.440, 0.442, 0.450, 0.463, 0.487, 0.487, 0.487", \
			  "0.508, 0.510, 0.510, 0.510, 0.510, 0.510, 0.510", \
			  "0.529, 0.529, 0.529, 0.529, 0.529, 0.529, 0.529", \
			  "0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571" \
			)
                       }
			rise_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.352, 0.354, 0.360, 0.369, 0.397, 0.450, 0.469", \
			  "0.358, 0.360, 0.365, 0.375, 0.403, 0.455, 0.471", \
			  "0.378, 0.380, 0.386, 0.395, 0.423, 0.476, 0.478", \
			  "0.406, 0.408, 0.413, 0.423, 0.451, 0.487, 0.487", \
			  "0.474, 0.476, 0.482, 0.491, 0.510, 0.510, 0.510", \
			  "0.529, 0.529, 0.529, 0.529, 0.529, 0.529, 0.529", \
			  "0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571" \
			)
			}
			fall_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.386, 0.389, 0.397, 0.410, 0.449, 0.469, 0.469", \
			  "0.392, 0.394, 0.402, 0.415, 0.455, 0.471, 0.471", \
			  "0.412, 0.415, 0.423, 0.436, 0.475, 0.478, 0.478", \
			  "0.440, 0.442, 0.450, 0.463, 0.487, 0.487, 0.487", \
			  "0.508, 0.510, 0.510, 0.510, 0.510, 0.510, 0.510", \
			  "0.529, 0.529, 0.529, 0.529, 0.529, 0.529, 0.529", \
			  "0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571" \
			)
                       }
			rise_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.352, 0.354, 0.360, 0.369, 0.397, 0.450, 0.469", \
			  "0.358, 0.360, 0.365, 0.375, 0.403, 0.455, 0.471", \
			  "0.378, 0.380, 0.386, 0.395, 0.423, 0.476, 0.478", \
			  "0.406, 0.408, 0.413, 0.423, 0.451, 0.487, 0.487", \
			  "0.474, 0.476, 0.482, 0.491, 0.510, 0.510, 0.510", \
			  "0.529, 0.529, 0.529, 0.529, 0.529, 0.529, 0.529", \
			  "0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571" \
			)
			}
			fall_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.283
		clock	: true;
		min_pulse_width_low	: 0.121;
		min_pulse_width_high	: 0.087;
		min_period		: 0.890;
		max_transition		: 2.200;
		internal_power(){
			when : "(!CEN \
                                 & WEN[7] \
                                 & WEN[6] \
                                 & WEN[5] \
                                 & WEN[4] \
                                 & WEN[3] \
                                 & WEN[2] \
                                 & WEN[1] \
                                 & WEN[0] \
                        	)";
			rise_power(RA1SHD1024X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("316.283, 316.283")
        		}
			fall_power(RA1SHD1024X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
            		when : "(!CEN & !( \
                            	WEN[7] & \
                            	WEN[6] & \
                            	WEN[5] & \
                            	WEN[4] & \
                            	WEN[3] & \
                            	WEN[2] & \
                            	WEN[1] & \
                            	WEN[0]))";
        		rise_power(RA1SHD1024X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("381.736, 381.736")
        		}
        		fall_power(RA1SHD1024X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD1024X64_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.057, 0.057")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.301, 0.301, 0.302, 0.304, 0.307, 0.340, 0.440", \
			  "0.299, 0.299, 0.300, 0.302, 0.306, 0.338, 0.438", \
			  "0.292, 0.293, 0.294, 0.295, 0.299, 0.331, 0.431", \
			  "0.283, 0.284, 0.285, 0.286, 0.290, 0.322, 0.422", \
			  "0.261, 0.261, 0.262, 0.264, 0.268, 0.300, 0.400", \
			  "0.243, 0.243, 0.244, 0.246, 0.250, 0.282, 0.382", \
			  "0.203, 0.203, 0.204, 0.205, 0.209, 0.241, 0.341" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.301, 0.301, 0.302, 0.304, 0.307, 0.340, 0.440", \
			  "0.299, 0.299, 0.300, 0.302, 0.306, 0.338, 0.438", \
			  "0.292, 0.293, 0.294, 0.295, 0.299, 0.331, 0.431", \
			  "0.283, 0.284, 0.285, 0.286, 0.290, 0.322, 0.422", \
			  "0.261, 0.261, 0.262, 0.264, 0.268, 0.300, 0.400", \
			  "0.243, 0.243, 0.244, 0.246, 0.250, 0.282, 0.382", \
			  "0.203, 0.203, 0.204, 0.205, 0.209, 0.241, 0.341" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.011, 0.010, 0.009, 0.005, 0.002, 0.000", \
			  "0.029, 0.029, 0.028, 0.027, 0.023, 0.020, 0.013", \
			  "0.070, 0.069, 0.068, 0.067, 0.063, 0.060, 0.053" \
			)
				
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.011, 0.010, 0.009, 0.005, 0.002, 0.000", \
			  "0.029, 0.029, 0.028, 0.027, 0.023, 0.020, 0.013", \
			  "0.070, 0.069, 0.068, 0.067, 0.063, 0.060, 0.053" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	bus(WEN)	 {
		bus_type : RA1SHD1024X64_WRITE;
		direction : input;
		capacitance : 0.123;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.149, 0.150, 0.165, 0.189, 0.249, 0.298, 0.406", \
			  "0.147, 0.148, 0.163, 0.187, 0.247, 0.296, 0.404", \
			  "0.140, 0.142, 0.156, 0.180, 0.241, 0.289, 0.398", \
			  "0.131, 0.133, 0.147, 0.171, 0.232, 0.280, 0.389", \
			  "0.109, 0.110, 0.125, 0.149, 0.209, 0.258, 0.366", \
			  "0.091, 0.092, 0.107, 0.131, 0.191, 0.240, 0.348", \
			  "0.065, 0.066, 0.071, 0.091, 0.151, 0.199, 0.308" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.149, 0.150, 0.165, 0.189, 0.249, 0.298, 0.406", \
			  "0.147, 0.148, 0.163, 0.187, 0.247, 0.296, 0.404", \
			  "0.140, 0.142, 0.156, 0.180, 0.241, 0.289, 0.398", \
			  "0.131, 0.133, 0.147, 0.171, 0.232, 0.280, 0.389", \
			  "0.109, 0.110, 0.125, 0.149, 0.209, 0.258, 0.366", \
			  "0.091, 0.092, 0.107, 0.131, 0.191, 0.240, 0.348", \
			  "0.065, 0.066, 0.071, 0.091, 0.151, 0.199, 0.308" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD1024X64_ADDRESS;
		direction : input;
		capacitance : 0.055;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.238, 0.238, 0.239, 0.240, 0.241, 0.242, 0.321", \
			  "0.237, 0.237, 0.237, 0.238, 0.239, 0.241, 0.320", \
			  "0.230, 0.230, 0.230, 0.231, 0.233, 0.234, 0.313", \
			  "0.221, 0.221, 0.221, 0.222, 0.224, 0.225, 0.304", \
			  "0.198, 0.199, 0.199, 0.200, 0.201, 0.203, 0.281", \
			  "0.180, 0.181, 0.181, 0.182, 0.183, 0.185, 0.264", \
			  "0.140, 0.140, 0.141, 0.141, 0.143, 0.144, 0.223" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.238, 0.238, 0.239, 0.240, 0.241, 0.242, 0.321", \
			  "0.237, 0.237, 0.237, 0.238, 0.239, 0.241, 0.320", \
			  "0.230, 0.230, 0.230, 0.231, 0.233, 0.234, 0.313", \
			  "0.221, 0.221, 0.221, 0.222, 0.224, 0.225, 0.304", \
			  "0.198, 0.199, 0.199, 0.200, 0.201, 0.203, 0.281", \
			  "0.180, 0.181, 0.181, 0.182, 0.183, 0.185, 0.264", \
			  "0.140, 0.140, 0.141, 0.141, 0.143, 0.144, 0.223" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.038, 0.038, 0.038, 0.037, 0.036, 0.034, 0.031", \
			  "0.040, 0.040, 0.040, 0.039, 0.037, 0.036, 0.033", \
			  "0.047, 0.047, 0.046, 0.046, 0.044, 0.043, 0.040", \
			  "0.056, 0.056, 0.055, 0.055, 0.053, 0.052, 0.049", \
			  "0.078, 0.078, 0.078, 0.077, 0.075, 0.074, 0.071", \
			  "0.096, 0.096, 0.096, 0.095, 0.093, 0.092, 0.089", \
			  "0.137, 0.136, 0.136, 0.135, 0.134, 0.132, 0.130" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.023, 0.019, 0.006, 0.000, 0.000, 0.000, 0.000", \
			  "0.025, 0.021, 0.007, 0.000, 0.000, 0.000, 0.000", \
			  "0.031, 0.028, 0.014, 0.000, 0.000, 0.000, 0.000", \
			  "0.040, 0.037, 0.023, 0.005, 0.000, 0.000, 0.000", \
			  "0.063, 0.059, 0.046, 0.027, 0.000, 0.000, 0.000", \
			  "0.081, 0.077, 0.064, 0.045, 0.000, 0.000, 0.000", \
			  "0.121, 0.118, 0.104, 0.086, 0.040, 0.004, 0.000" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD1024X64_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("4.950, 4.950")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD1024X64_DATA;
		direction : input;
		capacitance : 0.005;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.132, 0.133, 0.135, 0.137, 0.200, 0.258, 0.389", \
			  "0.130, 0.131, 0.133, 0.135, 0.199, 0.257, 0.387", \
			  "0.124, 0.124, 0.126, 0.128, 0.192, 0.250, 0.380", \
			  "0.115, 0.115, 0.117, 0.119, 0.183, 0.241, 0.371", \
			  "0.092, 0.093, 0.095, 0.097, 0.161, 0.218, 0.349", \
			  "0.074, 0.075, 0.077, 0.079, 0.143, 0.201, 0.331", \
			  "0.034, 0.034, 0.036, 0.039, 0.102, 0.160, 0.290" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.132, 0.133, 0.135, 0.137, 0.200, 0.258, 0.389", \
			  "0.130, 0.131, 0.133, 0.135, 0.199, 0.257, 0.387", \
			  "0.124, 0.124, 0.126, 0.128, 0.192, 0.250, 0.380", \
			  "0.115, 0.115, 0.117, 0.119, 0.183, 0.241, 0.371", \
			  "0.092, 0.093, 0.095, 0.097, 0.161, 0.218, 0.349", \
			  "0.074, 0.075, 0.077, 0.079, 0.143, 0.201, 0.331", \
			  "0.034, 0.034, 0.036, 0.039, 0.102, 0.160, 0.290" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.012, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.015, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.043, 0.037, 0.015, 0.000, 0.000, 0.000, 0.000", \
			  "0.061, 0.055, 0.033, 0.004, 0.000, 0.000, 0.000", \
			  "0.101, 0.096, 0.074, 0.045, 0.019, 0.014, 0.003" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.012, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.015, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.043, 0.037, 0.015, 0.000, 0.000, 0.000, 0.000", \
			  "0.061, 0.055, 0.033, 0.004, 0.000, 0.000, 0.000", \
			  "0.101, 0.096, 0.074, 0.045, 0.019, 0.014, 0.003" \
			)
		}	}
	}

	cell_leakage_power : 4.20E-2;
  }
}
