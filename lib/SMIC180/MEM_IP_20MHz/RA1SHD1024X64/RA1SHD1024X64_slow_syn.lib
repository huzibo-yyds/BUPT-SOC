/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD1024X64 -words 1024 -bits 64 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on -libname USERLIB
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD1024X64
 *      Words:          1024
 *      Word Width:     64
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2002-06-03 12:31:34Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2002-06-03 12:31:34Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2002 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.620;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 4.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(slow) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.620;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : slow;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD1024X64_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD1024X64_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD1024X64_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD1024X64_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD1024X64_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 64;
		bit_from : 63;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD1024X64_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 10;
		bit_from : 9;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD1024X64_WRITE) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD1024X64) {
	area		 : 474048.560;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 10;
		word_width : 64;
	}
	bus(Q)	 {
		bus_type : RA1SHD1024X64_DATA;
		direction : output;
		max_capacitance : 0.822;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "2.201, 2.207, 2.223, 2.250, 2.331, 2.482, 2.633", \
			  "2.208, 2.213, 2.229, 2.256, 2.337, 2.489, 2.640", \
			  "2.232, 2.238, 2.254, 2.281, 2.362, 2.513, 2.664", \
			  "2.281, 2.286, 2.303, 2.330, 2.411, 2.562, 2.713", \
			  "2.395, 2.400, 2.417, 2.444, 2.525, 2.676, 2.827", \
			  "2.623, 2.628, 2.645, 2.672, 2.753, 2.904, 3.055", \
			  "2.851, 2.856, 2.872, 2.899, 2.980, 3.132, 3.283" \
			)
			}
			rise_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "2.195, 2.199, 2.210, 2.229, 2.286, 2.391, 2.497", \
			  "2.201, 2.205, 2.216, 2.235, 2.292, 2.398, 2.504", \
			  "2.226, 2.230, 2.241, 2.260, 2.316, 2.422, 2.528", \
			  "2.275, 2.278, 2.290, 2.309, 2.365, 2.471, 2.577", \
			  "2.389, 2.392, 2.404, 2.423, 2.479, 2.585, 2.691", \
			  "2.616, 2.620, 2.632, 2.650, 2.707, 2.813, 2.919", \
			  "2.844, 2.848, 2.859, 2.878, 2.935, 3.041, 3.147" \
			)
			}
			fall_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "1.021, 1.021, 1.021, 1.021, 1.021, 1.134, 1.285", \
			  "1.025, 1.025, 1.025, 1.025, 1.025, 1.139, 1.290", \
			  "1.039, 1.039, 1.039, 1.039, 1.039, 1.159, 1.310", \
			  "1.069, 1.069, 1.069, 1.069, 1.069, 1.197, 1.348", \
			  "1.139, 1.139, 1.139, 1.139, 1.139, 1.287, 1.438", \
			  "1.278, 1.278, 1.278, 1.278, 1.315, 1.467, 1.618", \
			  "1.417, 1.417, 1.417, 1.417, 1.495, 1.646, 1.797" \
			)
                       }
			rise_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.088", \
			  "1.025, 1.025, 1.025, 1.025, 1.025, 1.025, 1.094", \
			  "1.039, 1.039, 1.039, 1.039, 1.039, 1.039, 1.113", \
			  "1.069, 1.069, 1.069, 1.069, 1.069, 1.069, 1.151", \
			  "1.139, 1.139, 1.139, 1.139, 1.139, 1.139, 1.241", \
			  "1.278, 1.278, 1.278, 1.278, 1.278, 1.315, 1.421", \
			  "1.417, 1.417, 1.417, 1.417, 1.417, 1.495, 1.601" \
			)
			}
			fall_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "1.021, 1.021, 1.021, 1.021, 1.021, 1.134, 1.285", \
			  "1.025, 1.025, 1.025, 1.025, 1.025, 1.139, 1.290", \
			  "1.039, 1.039, 1.039, 1.039, 1.039, 1.159, 1.310", \
			  "1.069, 1.069, 1.069, 1.069, 1.069, 1.197, 1.348", \
			  "1.139, 1.139, 1.139, 1.139, 1.139, 1.287, 1.438", \
			  "1.278, 1.278, 1.278, 1.278, 1.315, 1.467, 1.618", \
			  "1.417, 1.417, 1.417, 1.417, 1.495, 1.646, 1.797" \
			)
                       }
			rise_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD1024X64_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.088", \
			  "1.025, 1.025, 1.025, 1.025, 1.025, 1.025, 1.094", \
			  "1.039, 1.039, 1.039, 1.039, 1.039, 1.039, 1.113", \
			  "1.069, 1.069, 1.069, 1.069, 1.069, 1.069, 1.151", \
			  "1.139, 1.139, 1.139, 1.139, 1.139, 1.139, 1.241", \
			  "1.278, 1.278, 1.278, 1.278, 1.278, 1.315, 1.421", \
			  "1.417, 1.417, 1.417, 1.417, 1.417, 1.495, 1.601" \
			)
			}
			fall_transition(RA1SHD1024X64_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.266
		clock	: true;
		min_pulse_width_low	: 0.311;
		min_pulse_width_high	: 0.209;
		min_period		: 2.223;
		max_transition		: 4.000;
		internal_power(){
			when : "(!CEN \
                                 & WEN[7] \
                                 & WEN[6] \
                                 & WEN[5] \
                                 & WEN[4] \
                                 & WEN[3] \
                                 & WEN[2] \
                                 & WEN[1] \
                                 & WEN[0] \
                        	)";
			rise_power(RA1SHD1024X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("199.346, 199.346")
        		}
			fall_power(RA1SHD1024X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
            		when : "(!CEN & !( \
                            	WEN[7] & \
                            	WEN[6] & \
                            	WEN[5] & \
                            	WEN[4] & \
                            	WEN[3] & \
                            	WEN[2] & \
                            	WEN[1] & \
                            	WEN[0]))";
        		rise_power(RA1SHD1024X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("245.111, 245.111")
        		}
        		fall_power(RA1SHD1024X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD1024X64_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.061, 0.061")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.662, 0.664, 0.672, 0.688, 0.726, 0.802, 0.886", \
			  "0.655, 0.657, 0.666, 0.682, 0.720, 0.795, 0.879", \
			  "0.631, 0.633, 0.641, 0.657, 0.695, 0.771, 0.855", \
			  "0.582, 0.584, 0.592, 0.608, 0.646, 0.722, 0.806", \
			  "0.468, 0.470, 0.478, 0.495, 0.532, 0.608, 0.692", \
			  "0.240, 0.242, 0.250, 0.267, 0.304, 0.380, 0.464", \
			  "0.012, 0.014, 0.023, 0.039, 0.076, 0.152, 0.236" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.662, 0.664, 0.672, 0.688, 0.726, 0.802, 0.886", \
			  "0.655, 0.657, 0.666, 0.682, 0.720, 0.795, 0.879", \
			  "0.631, 0.633, 0.641, 0.657, 0.695, 0.771, 0.855", \
			  "0.582, 0.584, 0.592, 0.608, 0.646, 0.722, 0.806", \
			  "0.468, 0.470, 0.478, 0.495, 0.532, 0.608, 0.692", \
			  "0.240, 0.242, 0.250, 0.267, 0.304, 0.380, 0.464", \
			  "0.012, 0.014, 0.023, 0.039, 0.076, 0.152, 0.236" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.118, 0.116, 0.108, 0.091, 0.054, 0.000, 0.000", \
			  "0.346, 0.344, 0.336, 0.319, 0.282, 0.206, 0.131", \
			  "0.574, 0.572, 0.563, 0.547, 0.510, 0.434, 0.358" \
			)
				
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.118, 0.116, 0.108, 0.091, 0.054, 0.000, 0.000", \
			  "0.346, 0.344, 0.336, 0.319, 0.282, 0.206, 0.131", \
			  "0.574, 0.572, 0.563, 0.547, 0.510, 0.434, 0.358" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	bus(WEN)	 {
		bus_type : RA1SHD1024X64_WRITE;
		direction : input;
		capacitance : 0.121;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.418, 0.421, 0.433, 0.457, 0.513, 0.644, 0.794", \
			  "0.412, 0.415, 0.427, 0.451, 0.507, 0.638, 0.788", \
			  "0.387, 0.390, 0.402, 0.427, 0.483, 0.613, 0.763", \
			  "0.338, 0.342, 0.354, 0.378, 0.434, 0.565, 0.714", \
			  "0.231, 0.234, 0.246, 0.270, 0.326, 0.451, 0.600", \
			  "0.231, 0.234, 0.246, 0.270, 0.326, 0.438, 0.550", \
			  "0.231, 0.234, 0.246, 0.270, 0.326, 0.438, 0.550" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.418, 0.421, 0.433, 0.457, 0.513, 0.644, 0.794", \
			  "0.412, 0.415, 0.427, 0.451, 0.507, 0.638, 0.788", \
			  "0.387, 0.390, 0.402, 0.427, 0.483, 0.613, 0.763", \
			  "0.338, 0.342, 0.354, 0.378, 0.434, 0.565, 0.714", \
			  "0.231, 0.234, 0.246, 0.270, 0.326, 0.451, 0.600", \
			  "0.231, 0.234, 0.246, 0.270, 0.326, 0.438, 0.550", \
			  "0.231, 0.234, 0.246, 0.270, 0.326, 0.438, 0.550" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.120, 0.116, 0.100, 0.068, 0.000, 0.000, 0.000", \
			  "0.348, 0.344, 0.328, 0.296, 0.225, 0.113, 0.001" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.120, 0.116, 0.100, 0.068, 0.000, 0.000, 0.000", \
			  "0.348, 0.344, 0.328, 0.296, 0.225, 0.113, 0.001" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD1024X64_ADDRESS;
		direction : input;
		capacitance : 0.054;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.688, 0.689, 0.696, 0.710, 0.741, 0.804, 0.867", \
			  "0.681, 0.683, 0.690, 0.703, 0.735, 0.798, 0.861", \
			  "0.657, 0.658, 0.665, 0.679, 0.710, 0.773, 0.837", \
			  "0.608, 0.610, 0.616, 0.630, 0.661, 0.725, 0.788", \
			  "0.494, 0.496, 0.502, 0.516, 0.547, 0.611, 0.674", \
			  "0.266, 0.268, 0.274, 0.288, 0.320, 0.383, 0.446", \
			  "0.038, 0.040, 0.047, 0.060, 0.092, 0.155, 0.218" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.688, 0.689, 0.696, 0.710, 0.741, 0.804, 0.867", \
			  "0.681, 0.683, 0.690, 0.703, 0.735, 0.798, 0.861", \
			  "0.657, 0.658, 0.665, 0.679, 0.710, 0.773, 0.837", \
			  "0.608, 0.610, 0.616, 0.630, 0.661, 0.725, 0.788", \
			  "0.494, 0.496, 0.502, 0.516, 0.547, 0.611, 0.674", \
			  "0.266, 0.268, 0.274, 0.288, 0.320, 0.383, 0.446", \
			  "0.038, 0.040, 0.047, 0.060, 0.092, 0.155, 0.218" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.047, 0.045, 0.038, 0.025, 0.000, 0.000, 0.000", \
			  "0.053, 0.052, 0.045, 0.031, 0.000, 0.000, 0.000", \
			  "0.078, 0.076, 0.069, 0.056, 0.024, 0.000, 0.000", \
			  "0.127, 0.125, 0.118, 0.105, 0.073, 0.010, 0.000", \
			  "0.241, 0.239, 0.232, 0.219, 0.187, 0.124, 0.061", \
			  "0.469, 0.467, 0.460, 0.446, 0.415, 0.352, 0.289", \
			  "0.696, 0.695, 0.688, 0.674, 0.643, 0.580, 0.517" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.007, 0.004, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.014, 0.011, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.038, 0.035, 0.024, 0.003, 0.000, 0.000, 0.000", \
			  "0.087, 0.084, 0.073, 0.052, 0.001, 0.000, 0.000", \
			  "0.201, 0.198, 0.187, 0.166, 0.115, 0.014, 0.000", \
			  "0.429, 0.426, 0.415, 0.394, 0.343, 0.242, 0.142", \
			  "0.657, 0.654, 0.643, 0.622, 0.571, 0.470, 0.370" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD1024X64_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("3.057, 3.057")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD1024X64_DATA;
		direction : input;
		capacitance : 0.004;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.367, 0.370, 0.379, 0.399, 0.445, 0.537, 0.713", \
			  "0.360, 0.363, 0.373, 0.393, 0.438, 0.530, 0.707", \
			  "0.336, 0.339, 0.348, 0.368, 0.414, 0.506, 0.683", \
			  "0.287, 0.290, 0.300, 0.319, 0.365, 0.457, 0.634", \
			  "0.173, 0.176, 0.186, 0.205, 0.251, 0.343, 0.520", \
			  "0.000, 0.000, 0.000, 0.000, 0.023, 0.115, 0.292", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.064" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.367, 0.370, 0.379, 0.399, 0.445, 0.537, 0.713", \
			  "0.360, 0.363, 0.373, 0.393, 0.438, 0.530, 0.707", \
			  "0.336, 0.339, 0.348, 0.368, 0.414, 0.506, 0.683", \
			  "0.287, 0.290, 0.300, 0.319, 0.365, 0.457, 0.634", \
			  "0.173, 0.176, 0.186, 0.205, 0.251, 0.343, 0.520", \
			  "0.000, 0.000, 0.000, 0.000, 0.023, 0.115, 0.292", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.064" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.048, 0.043, 0.023, 0.000, 0.000, 0.000, 0.000", \
			  "0.162, 0.157, 0.137, 0.097, 0.005, 0.000, 0.000", \
			  "0.390, 0.385, 0.365, 0.325, 0.233, 0.048, 0.000", \
			  "0.618, 0.613, 0.593, 0.553, 0.461, 0.275, 0.166" \
			)
			}
			fall_constraint(RA1SHD1024X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.048, 0.043, 0.023, 0.000, 0.000, 0.000, 0.000", \
			  "0.162, 0.157, 0.137, 0.097, 0.005, 0.000, 0.000", \
			  "0.390, 0.385, 0.365, 0.325, 0.233, 0.048, 0.000", \
			  "0.618, 0.613, 0.593, 0.553, 0.461, 0.275, 0.166" \
			)
		}	}
	}

	cell_leakage_power : 4.91E-2;
  }
}
