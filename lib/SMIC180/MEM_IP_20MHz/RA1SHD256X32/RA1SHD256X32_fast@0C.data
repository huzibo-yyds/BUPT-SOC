/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD256X32 -words 256 -bits 32 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  RA1SHD256X32
 *      Words:          256
 *      Word Width:     32
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        fast@0C
 *      Delays:		min
 *
 *      Creation Date:  2002-06-03 13:15:12Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "fast@0C";
DESIGN              "RA1SHD256X32";

CELLDATA
area                   : 106626.051;
default_max_transition : 2.200;
ENDCELLDATA

PORTDATA
Q[31:0] : CAP(0.023), MAXCAP(0.823);
A[7:0] : CAP(0.055);
CEN : CAP(0.015);
CLK : CAP(0.193), MAXTRANS(2.200);
D[31:0] : CAP(0.005);
WEN[3:0] : CAP(0.123);
OEN : CAP(0.010);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(RA1SHD256X32_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X32_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X32_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.185, 0.185, 0.186, 0.186, 0.188, 0.196, 0.277", \
			  "0.183, 0.183, 0.184, 0.184, 0.186, 0.194, 0.276", \
			  "0.177, 0.177, 0.177, 0.178, 0.179, 0.187, 0.269", \
			  "0.168, 0.168, 0.168, 0.169, 0.170, 0.178, 0.260", \
			  "0.145, 0.145, 0.146, 0.146, 0.148, 0.156, 0.238", \
			  "0.127, 0.127, 0.128, 0.128, 0.130, 0.138, 0.220", \
			  "0.087, 0.087, 0.087, 0.088, 0.090, 0.097, 0.179" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.185, 0.185, 0.186, 0.186, 0.188, 0.196, 0.277", \
			  "0.183, 0.183, 0.184, 0.184, 0.186, 0.194, 0.276", \
			  "0.177, 0.177, 0.177, 0.178, 0.179, 0.187, 0.269", \
			  "0.168, 0.168, 0.168, 0.169, 0.170, 0.178, 0.260", \
			  "0.145, 0.145, 0.146, 0.146, 0.148, 0.156, 0.238", \
			  "0.127, 0.127, 0.128, 0.128, 0.130, 0.138, 0.220", \
			  "0.087, 0.087, 0.087, 0.088, 0.090, 0.097, 0.179" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.060, 0.060, 0.059, 0.059, 0.057, 0.056, 0.053", \
			  "0.062, 0.061, 0.061, 0.060, 0.059, 0.058, 0.055", \
			  "0.068, 0.068, 0.068, 0.067, 0.066, 0.064, 0.061", \
			  "0.077, 0.077, 0.077, 0.076, 0.074, 0.073, 0.070", \
			  "0.100, 0.100, 0.099, 0.099, 0.097, 0.096, 0.093", \
			  "0.118, 0.118, 0.117, 0.116, 0.115, 0.114, 0.111", \
			  "0.158, 0.158, 0.157, 0.157, 0.155, 0.154, 0.151" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.045, 0.041, 0.028, 0.009, 0.000, 0.000, 0.000", \
			  "0.047, 0.043, 0.029, 0.011, 0.000, 0.000, 0.000", \
			  "0.053, 0.050, 0.036, 0.018, 0.000, 0.000, 0.000", \
			  "0.062, 0.059, 0.045, 0.027, 0.000, 0.000, 0.000", \
			  "0.085, 0.081, 0.068, 0.049, 0.004, 0.000, 0.000", \
			  "0.103, 0.099, 0.086, 0.067, 0.022, 0.000, 0.000", \
			  "0.143, 0.140, 0.126, 0.108, 0.062, 0.026, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.268, 0.269, 0.270, 0.271, 0.284, 0.328, 0.428", \
			  "0.267, 0.267, 0.268, 0.270, 0.282, 0.326, 0.426", \
			  "0.260, 0.260, 0.261, 0.263, 0.275, 0.319, 0.419", \
			  "0.251, 0.251, 0.252, 0.254, 0.266, 0.311, 0.410", \
			  "0.229, 0.229, 0.230, 0.231, 0.244, 0.288, 0.388", \
			  "0.211, 0.211, 0.212, 0.213, 0.226, 0.270, 0.370", \
			  "0.170, 0.171, 0.172, 0.173, 0.185, 0.230, 0.330" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.268, 0.269, 0.270, 0.271, 0.284, 0.328, 0.428", \
			  "0.267, 0.267, 0.268, 0.270, 0.282, 0.326, 0.426", \
			  "0.260, 0.260, 0.261, 0.263, 0.275, 0.319, 0.419", \
			  "0.251, 0.251, 0.252, 0.254, 0.266, 0.311, 0.410", \
			  "0.229, 0.229, 0.230, 0.231, 0.244, 0.288, 0.388", \
			  "0.211, 0.211, 0.212, 0.213, 0.226, 0.270, 0.370", \
			  "0.170, 0.171, 0.172, 0.173, 0.185, 0.230, 0.330" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.011, 0.010, 0.009, 0.005, 0.002, 0.000", \
			  "0.029, 0.029, 0.028, 0.027, 0.023, 0.020, 0.013", \
			  "0.070, 0.069, 0.068, 0.067, 0.063, 0.060, 0.053" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.011, 0.011, 0.010, 0.009, 0.005, 0.002, 0.000", \
			  "0.029, 0.029, 0.028, 0.027, 0.023, 0.020, 0.013", \
			  "0.070, 0.069, 0.068, 0.067, 0.063, 0.060, 0.053" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.112, 0.112, 0.114, 0.123, 0.195, 0.253, 0.384", \
			  "0.110, 0.111, 0.112, 0.121, 0.194, 0.251, 0.382", \
			  "0.103, 0.104, 0.106, 0.114, 0.187, 0.245, 0.375", \
			  "0.094, 0.095, 0.097, 0.105, 0.178, 0.236, 0.366", \
			  "0.072, 0.072, 0.074, 0.083, 0.155, 0.213, 0.344", \
			  "0.054, 0.054, 0.056, 0.065, 0.137, 0.195, 0.326", \
			  "0.014, 0.014, 0.016, 0.025, 0.097, 0.155, 0.285" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.112, 0.112, 0.114, 0.123, 0.195, 0.253, 0.384", \
			  "0.110, 0.111, 0.112, 0.121, 0.194, 0.251, 0.382", \
			  "0.103, 0.104, 0.106, 0.114, 0.187, 0.245, 0.375", \
			  "0.094, 0.095, 0.097, 0.105, 0.178, 0.236, 0.366", \
			  "0.072, 0.072, 0.074, 0.083, 0.155, 0.213, 0.344", \
			  "0.054, 0.054, 0.056, 0.065, 0.137, 0.195, 0.326", \
			  "0.014, 0.014, 0.016, 0.025, 0.097, 0.155, 0.285" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.004, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.012, 0.007, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.016, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.044, 0.038, 0.016, 0.000, 0.000, 0.000, 0.000", \
			  "0.062, 0.056, 0.034, 0.005, 0.000, 0.000, 0.000", \
			  "0.102, 0.096, 0.075, 0.046, 0.028, 0.023, 0.012" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.004, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.012, 0.007, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.016, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.044, 0.038, 0.016, 0.000, 0.000, 0.000, 0.000", \
			  "0.062, 0.056, 0.034, 0.005, 0.000, 0.000, 0.000", \
			  "0.102, 0.096, 0.075, 0.046, 0.028, 0.023, 0.012" \
			)
			}
ENDARCDATA

ARCDATA
tch_tws:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.135, 0.140, 0.158, 0.183, 0.243, 0.291, 0.400", \
			  "0.134, 0.139, 0.157, 0.181, 0.241, 0.290, 0.398", \
			  "0.127, 0.132, 0.150, 0.174, 0.234, 0.283, 0.391", \
			  "0.118, 0.123, 0.141, 0.165, 0.225, 0.274, 0.383", \
			  "0.096, 0.100, 0.118, 0.143, 0.203, 0.251, 0.360", \
			  "0.078, 0.082, 0.101, 0.125, 0.185, 0.233, 0.342", \
			  "0.043, 0.044, 0.060, 0.084, 0.145, 0.193, 0.302" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.135, 0.140, 0.158, 0.183, 0.243, 0.291, 0.400", \
			  "0.134, 0.139, 0.157, 0.181, 0.241, 0.290, 0.398", \
			  "0.127, 0.132, 0.150, 0.174, 0.234, 0.283, 0.391", \
			  "0.118, 0.123, 0.141, 0.165, 0.225, 0.274, 0.383", \
			  "0.096, 0.100, 0.118, 0.143, 0.203, 0.251, 0.360", \
			  "0.078, 0.082, 0.101, 0.125, 0.185, 0.233, 0.342", \
			  "0.043, 0.044, 0.060, 0.084, 0.145, 0.193, 0.302" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.017, 0.012, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.017, 0.012, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA



ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("0.770")
			}
			fall_constraint(scalar) {
				values ("0.770")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.109")
			}
			fall_constraint(scalar) {
				values ("0.109")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.087")
			}
			fall_constraint(scalar) {
				values ("0.087")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.773, 0.775, 0.783, 0.792, 0.820, 0.873, 0.926", \
			  "0.774, 0.777, 0.785, 0.794, 0.822, 0.875, 0.927", \
			  "0.781, 0.784, 0.791, 0.801, 0.829, 0.881, 0.934", \
			  "0.790, 0.793, 0.800, 0.810, 0.838, 0.890, 0.943", \
			  "0.812, 0.815, 0.823, 0.832, 0.860, 0.913, 0.965", \
			  "0.830, 0.833, 0.841, 0.850, 0.878, 0.931, 0.983", \
			  "0.871, 0.873, 0.881, 0.890, 0.919, 0.971, 1.024" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.773, 0.775, 0.783, 0.792, 0.820, 0.873, 0.926", \
			  "0.774, 0.777, 0.785, 0.794, 0.822, 0.875, 0.927", \
			  "0.781, 0.784, 0.791, 0.801, 0.829, 0.881, 0.934", \
			  "0.790, 0.793, 0.800, 0.810, 0.838, 0.890, 0.943", \
			  "0.812, 0.815, 0.823, 0.832, 0.860, 0.913, 0.965", \
			  "0.830, 0.833, 0.841, 0.850, 0.878, 0.931, 0.983", \
			  "0.871, 0.873, 0.881, 0.890, 0.919, 0.971, 1.024" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
			}
ENDARCDATA
ARCDATA
dly_tlzl:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.358, 0.361, 0.368, 0.382, 0.421, 0.439, 0.439", \
			  "0.363, 0.366, 0.374, 0.387, 0.426, 0.441, 0.441", \
			  "0.384, 0.387, 0.394, 0.408, 0.447, 0.448, 0.448", \
			  "0.411, 0.414, 0.422, 0.435, 0.458, 0.458, 0.458", \
			  "0.480, 0.481, 0.481, 0.481, 0.481, 0.481, 0.481", \
			  "0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499", \
			  "0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.324, 0.326, 0.332, 0.341, 0.369, 0.422, 0.439", \
			  "0.329, 0.331, 0.337, 0.346, 0.375, 0.427, 0.441", \
			  "0.350, 0.352, 0.357, 0.367, 0.395, 0.448, 0.448", \
			  "0.377, 0.379, 0.385, 0.394, 0.422, 0.458, 0.458", \
			  "0.446, 0.448, 0.453, 0.463, 0.481, 0.481, 0.481", \
			  "0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499", \
			  "0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
			}
ENDARCDATA

ARCDATA
dly_tlzh:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.358, 0.361, 0.368, 0.382, 0.421, 0.439, 0.439", \
			  "0.363, 0.366, 0.374, 0.387, 0.426, 0.441, 0.441", \
			  "0.384, 0.387, 0.394, 0.408, 0.447, 0.448, 0.448", \
			  "0.411, 0.414, 0.422, 0.435, 0.458, 0.458, 0.458", \
			  "0.480, 0.481, 0.481, 0.481, 0.481, 0.481, 0.481", \
			  "0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499", \
			  "0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.053, 0.058, 0.073, 0.099, 0.176, 0.320, 0.463")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.324, 0.326, 0.332, 0.341, 0.369, 0.422, 0.439", \
			  "0.329, 0.331, 0.337, 0.346, 0.375, 0.427, 0.441", \
			  "0.350, 0.352, 0.357, 0.367, 0.395, 0.448, 0.448", \
			  "0.377, 0.379, 0.385, 0.394, 0.422, 0.458, 0.458", \
			  "0.446, 0.448, 0.453, 0.463, 0.481, 0.481, 0.481", \
			  "0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499", \
			  "0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.035, 0.038, 0.047, 0.061, 0.104, 0.183, 0.263")
			}
ENDARCDATA

ENDTIMINGDATA
ENDMODELDATA
