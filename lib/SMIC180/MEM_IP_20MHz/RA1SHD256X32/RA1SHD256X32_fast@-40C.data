/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD256X32 -words 256 -bits 32 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  RA1SHD256X32
 *      Words:          256
 *      Word Width:     32
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        fast@-40C
 *      Delays:		min
 *
 *      Creation Date:  2002-06-03 13:15:03Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "fast@-40C";
DESIGN              "RA1SHD256X32";

CELLDATA
area                   : 106626.051;
default_max_transition : 2.200;
ENDCELLDATA

PORTDATA
Q[31:0] : CAP(0.022), MAXCAP(0.822);
A[7:0] : CAP(0.055);
CEN : CAP(0.015);
CLK : CAP(0.193), MAXTRANS(2.200);
D[31:0] : CAP(0.005);
WEN[3:0] : CAP(0.123);
OEN : CAP(0.010);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(RA1SHD256X32_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X32_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X32_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.172, 0.172, 0.172, 0.171, 0.170, 0.193, 0.277", \
			  "0.170, 0.170, 0.170, 0.170, 0.169, 0.191, 0.275", \
			  "0.164, 0.164, 0.164, 0.163, 0.162, 0.185, 0.269", \
			  "0.156, 0.155, 0.155, 0.155, 0.154, 0.177, 0.260", \
			  "0.134, 0.134, 0.134, 0.134, 0.133, 0.155, 0.239", \
			  "0.117, 0.117, 0.117, 0.117, 0.116, 0.139, 0.222", \
			  "0.079, 0.079, 0.079, 0.078, 0.077, 0.100, 0.184" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.172, 0.172, 0.172, 0.171, 0.170, 0.193, 0.277", \
			  "0.170, 0.170, 0.170, 0.170, 0.169, 0.191, 0.275", \
			  "0.164, 0.164, 0.164, 0.163, 0.162, 0.185, 0.269", \
			  "0.156, 0.155, 0.155, 0.155, 0.154, 0.177, 0.260", \
			  "0.134, 0.134, 0.134, 0.134, 0.133, 0.155, 0.239", \
			  "0.117, 0.117, 0.117, 0.117, 0.116, 0.139, 0.222", \
			  "0.079, 0.079, 0.079, 0.078, 0.077, 0.100, 0.184" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.053, 0.053, 0.053, 0.053, 0.055, 0.055, 0.057", \
			  "0.054, 0.054, 0.055, 0.055, 0.056, 0.057, 0.059", \
			  "0.061, 0.061, 0.061, 0.062, 0.063, 0.063, 0.065", \
			  "0.069, 0.069, 0.070, 0.070, 0.071, 0.072, 0.074", \
			  "0.090, 0.090, 0.091, 0.091, 0.092, 0.093, 0.095", \
			  "0.107, 0.107, 0.108, 0.108, 0.109, 0.110, 0.112", \
			  "0.145, 0.146, 0.146, 0.146, 0.147, 0.148, 0.150" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.043, 0.039, 0.025, 0.007, 0.000, 0.000, 0.000", \
			  "0.045, 0.041, 0.027, 0.008, 0.000, 0.000, 0.000", \
			  "0.051, 0.047, 0.033, 0.015, 0.000, 0.000, 0.000", \
			  "0.059, 0.056, 0.042, 0.023, 0.000, 0.000, 0.000", \
			  "0.081, 0.077, 0.063, 0.044, 0.000, 0.000, 0.000", \
			  "0.097, 0.094, 0.080, 0.061, 0.015, 0.000, 0.000", \
			  "0.136, 0.132, 0.118, 0.099, 0.053, 0.015, 0.000" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.249, 0.249, 0.249, 0.249, 0.270, 0.315, 0.417", \
			  "0.247, 0.247, 0.247, 0.248, 0.268, 0.314, 0.416", \
			  "0.241, 0.241, 0.241, 0.241, 0.262, 0.307, 0.409", \
			  "0.232, 0.232, 0.233, 0.233, 0.253, 0.299, 0.401", \
			  "0.211, 0.211, 0.211, 0.212, 0.232, 0.278, 0.380", \
			  "0.194, 0.194, 0.194, 0.195, 0.215, 0.261, 0.363", \
			  "0.156, 0.156, 0.156, 0.157, 0.177, 0.223, 0.324" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.249, 0.249, 0.249, 0.249, 0.270, 0.315, 0.417", \
			  "0.247, 0.247, 0.247, 0.248, 0.268, 0.314, 0.416", \
			  "0.241, 0.241, 0.241, 0.241, 0.262, 0.307, 0.409", \
			  "0.232, 0.232, 0.233, 0.233, 0.253, 0.299, 0.401", \
			  "0.211, 0.211, 0.211, 0.212, 0.232, 0.278, 0.380", \
			  "0.194, 0.194, 0.194, 0.195, 0.215, 0.261, 0.363", \
			  "0.156, 0.156, 0.156, 0.157, 0.177, 0.223, 0.324" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.008, 0.007, 0.007, 0.007, 0.006, 0.005, 0.003", \
			  "0.024, 0.024, 0.024, 0.024, 0.023, 0.022, 0.020", \
			  "0.063, 0.063, 0.062, 0.062, 0.061, 0.060, 0.058" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.008, 0.007, 0.007, 0.007, 0.006, 0.005, 0.003", \
			  "0.024, 0.024, 0.024, 0.024, 0.023, 0.022, 0.020", \
			  "0.063, 0.063, 0.062, 0.062, 0.061, 0.060, 0.058" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.106, 0.107, 0.108, 0.119, 0.192, 0.251, 0.382", \
			  "0.105, 0.105, 0.106, 0.118, 0.191, 0.249, 0.381", \
			  "0.098, 0.099, 0.100, 0.111, 0.184, 0.243, 0.374", \
			  "0.090, 0.090, 0.091, 0.103, 0.176, 0.234, 0.366", \
			  "0.069, 0.069, 0.070, 0.082, 0.155, 0.213, 0.345", \
			  "0.052, 0.052, 0.053, 0.065, 0.138, 0.196, 0.328", \
			  "0.014, 0.014, 0.015, 0.027, 0.100, 0.158, 0.290" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.106, 0.107, 0.108, 0.119, 0.192, 0.251, 0.382", \
			  "0.105, 0.105, 0.106, 0.118, 0.191, 0.249, 0.381", \
			  "0.098, 0.099, 0.100, 0.111, 0.184, 0.243, 0.374", \
			  "0.090, 0.090, 0.091, 0.103, 0.176, 0.234, 0.366", \
			  "0.069, 0.069, 0.070, 0.082, 0.155, 0.213, 0.345", \
			  "0.052, 0.052, 0.053, 0.065, 0.138, 0.196, 0.328", \
			  "0.014, 0.014, 0.015, 0.027, 0.100, 0.158, 0.290" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.013, 0.007, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.015, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.042, 0.037, 0.015, 0.000, 0.000, 0.000, 0.000", \
			  "0.059, 0.054, 0.032, 0.002, 0.000, 0.000, 0.000", \
			  "0.098, 0.092, 0.070, 0.041, 0.026, 0.024, 0.018" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.005, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.001, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.013, 0.007, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.021, 0.015, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.042, 0.037, 0.015, 0.000, 0.000, 0.000, 0.000", \
			  "0.059, 0.054, 0.032, 0.002, 0.000, 0.000, 0.000", \
			  "0.098, 0.092, 0.070, 0.041, 0.026, 0.024, 0.018" \
			)
			}
ENDARCDATA

ARCDATA
tch_tws:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.126, 0.131, 0.149, 0.174, 0.235, 0.285, 0.395", \
			  "0.124, 0.129, 0.148, 0.172, 0.234, 0.283, 0.393", \
			  "0.118, 0.123, 0.141, 0.166, 0.227, 0.277, 0.387", \
			  "0.109, 0.114, 0.133, 0.157, 0.219, 0.268, 0.379", \
			  "0.088, 0.093, 0.112, 0.136, 0.198, 0.247, 0.357", \
			  "0.071, 0.076, 0.095, 0.119, 0.181, 0.230, 0.341", \
			  "0.045, 0.046, 0.057, 0.081, 0.143, 0.192, 0.302" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.126, 0.131, 0.149, 0.174, 0.235, 0.285, 0.395", \
			  "0.124, 0.129, 0.148, 0.172, 0.234, 0.283, 0.393", \
			  "0.118, 0.123, 0.141, 0.166, 0.227, 0.277, 0.387", \
			  "0.109, 0.114, 0.133, 0.157, 0.219, 0.268, 0.379", \
			  "0.088, 0.093, 0.112, 0.136, 0.198, 0.247, 0.357", \
			  "0.071, 0.076, 0.095, 0.119, 0.181, 0.230, 0.341", \
			  "0.045, 0.046, 0.057, 0.081, 0.143, 0.192, 0.302" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.014, 0.009, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.014, 0.009, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
ENDARCDATA



ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("0.710")
			}
			fall_constraint(scalar) {
				values ("0.710")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.100")
			}
			fall_constraint(scalar) {
				values ("0.100")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.080")
			}
			fall_constraint(scalar) {
				values ("0.080")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "0.716, 0.718, 0.726, 0.737, 0.763, 0.813, 0.862", \
			  "0.717, 0.720, 0.727, 0.738, 0.765, 0.814, 0.864", \
			  "0.724, 0.726, 0.734, 0.745, 0.771, 0.821, 0.870", \
			  "0.732, 0.735, 0.742, 0.753, 0.780, 0.829, 0.879", \
			  "0.753, 0.756, 0.763, 0.774, 0.801, 0.850, 0.900", \
			  "0.770, 0.773, 0.780, 0.791, 0.818, 0.867, 0.917", \
			  "0.809, 0.811, 0.818, 0.830, 0.856, 0.905, 0.955" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.051, 0.056, 0.071, 0.096, 0.171, 0.311, 0.451")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "0.716, 0.718, 0.726, 0.737, 0.763, 0.813, 0.862", \
			  "0.717, 0.720, 0.727, 0.738, 0.765, 0.814, 0.864", \
			  "0.724, 0.726, 0.734, 0.745, 0.771, 0.821, 0.870", \
			  "0.732, 0.735, 0.742, 0.753, 0.780, 0.829, 0.879", \
			  "0.753, 0.756, 0.763, 0.774, 0.801, 0.850, 0.900", \
			  "0.770, 0.773, 0.780, 0.791, 0.818, 0.867, 0.917", \
			  "0.809, 0.811, 0.818, 0.830, 0.856, 0.905, 0.955" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.030, 0.033, 0.041, 0.054, 0.094, 0.169, 0.243")
			}
ENDARCDATA
ARCDATA
dly_tlzl:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.340, 0.342, 0.350, 0.362, 0.399, 0.415, 0.415", \
			  "0.345, 0.348, 0.355, 0.368, 0.405, 0.417, 0.417", \
			  "0.366, 0.369, 0.376, 0.389, 0.423, 0.423, 0.423", \
			  "0.394, 0.397, 0.404, 0.416, 0.431, 0.431, 0.431", \
			  "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
			  "0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466", \
			  "0.501, 0.501, 0.501, 0.501, 0.501, 0.501, 0.501" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.051, 0.056, 0.071, 0.096, 0.171, 0.311, 0.451")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.305, 0.306, 0.312, 0.321, 0.347, 0.396, 0.415", \
			  "0.310, 0.312, 0.317, 0.326, 0.353, 0.402, 0.417", \
			  "0.331, 0.333, 0.338, 0.347, 0.373, 0.423, 0.423", \
			  "0.359, 0.361, 0.366, 0.375, 0.401, 0.431, 0.431", \
			  "0.428, 0.430, 0.435, 0.444, 0.450, 0.450, 0.450", \
			  "0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466", \
			  "0.501, 0.501, 0.501, 0.501, 0.501, 0.501, 0.501" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.030, 0.033, 0.041, 0.054, 0.094, 0.169, 0.243")
			}
ENDARCDATA

ARCDATA
dly_tlzh:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.340, 0.342, 0.350, 0.362, 0.399, 0.415, 0.415", \
			  "0.345, 0.348, 0.355, 0.368, 0.405, 0.417, 0.417", \
			  "0.366, 0.369, 0.376, 0.389, 0.423, 0.423, 0.423", \
			  "0.394, 0.397, 0.404, 0.416, 0.431, 0.431, 0.431", \
			  "0.450, 0.450, 0.450, 0.450, 0.450, 0.450, 0.450", \
			  "0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466", \
			  "0.501, 0.501, 0.501, 0.501, 0.501, 0.501, 0.501" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.051, 0.056, 0.071, 0.096, 0.171, 0.311, 0.451")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.400, 0.900, 1.300, 2.200");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.305, 0.306, 0.312, 0.321, 0.347, 0.396, 0.415", \
			  "0.310, 0.312, 0.317, 0.326, 0.353, 0.402, 0.417", \
			  "0.331, 0.333, 0.338, 0.347, 0.373, 0.423, 0.423", \
			  "0.359, 0.361, 0.366, 0.375, 0.401, 0.431, 0.431", \
			  "0.428, 0.430, 0.435, 0.444, 0.450, 0.450, 0.450", \
			  "0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466", \
			  "0.501, 0.501, 0.501, 0.501, 0.501, 0.501, 0.501" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.030, 0.033, 0.041, 0.054, 0.094, 0.169, 0.243")
			}
ENDARCDATA

ENDTIMINGDATA
ENDMODELDATA
