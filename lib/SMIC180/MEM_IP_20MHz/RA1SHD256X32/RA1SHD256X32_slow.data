/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD256X32 -words 256 -bits 32 -frequency 20 -ring_width 2 -mux 4 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  RA1SHD256X32
 *      Words:          256
 *      Word Width:     32
 *      Mux:            4
 *      Pipeline:       No
 *      Process:        slow
 *      Delays:		max
 *
 *      Creation Date:  2002-06-03 13:15:29Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "slow";
DESIGN              "RA1SHD256X32";

CELLDATA
area                   : 106626.051;
default_max_transition : 4.000;
ENDCELLDATA

PORTDATA
Q[31:0] : CAP(0.022), MAXCAP(0.822);
A[7:0] : CAP(0.054);
CEN : CAP(0.015);
CLK : CAP(0.157), MAXTRANS(4.000);
D[31:0] : CAP(0.004);
WEN[3:0] : CAP(0.121);
OEN : CAP(0.010);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(RA1SHD256X32_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X32_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD256X32_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL

ARCDATA
tch_tas:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.522, 0.524, 0.531, 0.545, 0.576, 0.639, 0.702", \
			  "0.516, 0.518, 0.524, 0.538, 0.570, 0.633, 0.696", \
			  "0.491, 0.493, 0.500, 0.514, 0.545, 0.608, 0.671", \
			  "0.443, 0.444, 0.451, 0.465, 0.496, 0.559, 0.623", \
			  "0.329, 0.331, 0.337, 0.351, 0.382, 0.446, 0.509", \
			  "0.101, 0.103, 0.109, 0.123, 0.154, 0.218, 0.281", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.053" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.522, 0.524, 0.531, 0.545, 0.576, 0.639, 0.702", \
			  "0.516, 0.518, 0.524, 0.538, 0.570, 0.633, 0.696", \
			  "0.491, 0.493, 0.500, 0.514, 0.545, 0.608, 0.671", \
			  "0.443, 0.444, 0.451, 0.465, 0.496, 0.559, 0.623", \
			  "0.329, 0.331, 0.337, 0.351, 0.382, 0.446, 0.509", \
			  "0.101, 0.103, 0.109, 0.123, 0.154, 0.218, 0.281", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.053" \
			)
			}
ENDARCDATA

ARCDATA
tch_tah:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.098, 0.096, 0.090, 0.076, 0.044, 0.000, 0.000", \
			  "0.105, 0.103, 0.096, 0.083, 0.051, 0.000, 0.000", \
			  "0.129, 0.127, 0.120, 0.107, 0.075, 0.012, 0.000", \
			  "0.178, 0.176, 0.169, 0.156, 0.124, 0.061, 0.000", \
			  "0.292, 0.290, 0.283, 0.270, 0.238, 0.175, 0.112", \
			  "0.520, 0.518, 0.511, 0.498, 0.466, 0.403, 0.340", \
			  "0.748, 0.746, 0.739, 0.726, 0.694, 0.631, 0.568" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.059, 0.056, 0.045, 0.024, 0.000, 0.000, 0.000", \
			  "0.066, 0.063, 0.052, 0.030, 0.000, 0.000, 0.000", \
			  "0.090, 0.087, 0.076, 0.055, 0.004, 0.000, 0.000", \
			  "0.139, 0.136, 0.125, 0.103, 0.053, 0.000, 0.000", \
			  "0.253, 0.250, 0.239, 0.217, 0.167, 0.066, 0.000", \
			  "0.481, 0.478, 0.467, 0.445, 0.395, 0.294, 0.193", \
			  "0.709, 0.706, 0.695, 0.673, 0.623, 0.522, 0.421" \
			)
			}
ENDARCDATA

ARCDATA
tch_tcs:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.588, 0.590, 0.599, 0.615, 0.652, 0.728, 0.855", \
			  "0.582, 0.584, 0.592, 0.608, 0.646, 0.721, 0.849", \
			  "0.557, 0.559, 0.568, 0.584, 0.622, 0.697, 0.824", \
			  "0.508, 0.511, 0.519, 0.535, 0.573, 0.648, 0.775", \
			  "0.395, 0.397, 0.405, 0.421, 0.459, 0.534, 0.661", \
			  "0.167, 0.169, 0.177, 0.193, 0.231, 0.306, 0.433", \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.078, 0.206" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.588, 0.590, 0.599, 0.615, 0.652, 0.728, 0.855", \
			  "0.582, 0.584, 0.592, 0.608, 0.646, 0.721, 0.849", \
			  "0.557, 0.559, 0.568, 0.584, 0.622, 0.697, 0.824", \
			  "0.508, 0.511, 0.519, 0.535, 0.573, 0.648, 0.775", \
			  "0.395, 0.397, 0.405, 0.421, 0.459, 0.534, 0.661", \
			  "0.167, 0.169, 0.177, 0.193, 0.231, 0.306, 0.433", \
			  "0.000, 0.000, 0.000, 0.000, 0.003, 0.078, 0.206" \
			)
			}
ENDARCDATA

ARCDATA
tch_tch:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.118, 0.116, 0.108, 0.091, 0.054, 0.000, 0.000", \
			  "0.346, 0.344, 0.336, 0.319, 0.282, 0.206, 0.131", \
			  "0.574, 0.572, 0.563, 0.547, 0.510, 0.434, 0.358" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.004, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.118, 0.116, 0.108, 0.091, 0.054, 0.000, 0.000", \
			  "0.346, 0.344, 0.336, 0.319, 0.282, 0.206, 0.131", \
			  "0.574, 0.572, 0.563, 0.547, 0.510, 0.434, 0.358" \
			)
			}
ENDARCDATA

ARCDATA
tch_tds:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.316, 0.319, 0.328, 0.348, 0.394, 0.518, 0.703", \
			  "0.309, 0.312, 0.322, 0.342, 0.388, 0.511, 0.697", \
			  "0.285, 0.288, 0.298, 0.317, 0.363, 0.487, 0.672", \
			  "0.236, 0.239, 0.249, 0.268, 0.314, 0.438, 0.623", \
			  "0.122, 0.125, 0.135, 0.154, 0.200, 0.324, 0.509", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.096, 0.281", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.053" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.316, 0.319, 0.328, 0.348, 0.394, 0.518, 0.703", \
			  "0.309, 0.312, 0.322, 0.342, 0.388, 0.511, 0.697", \
			  "0.285, 0.288, 0.298, 0.317, 0.363, 0.487, 0.672", \
			  "0.236, 0.239, 0.249, 0.268, 0.314, 0.438, 0.623", \
			  "0.122, 0.125, 0.135, 0.154, 0.200, 0.324, 0.509", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.096, 0.281", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.053" \
			)
			}
ENDARCDATA

ARCDATA
tch_tdh:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.059, 0.054, 0.034, 0.000, 0.000, 0.000, 0.000", \
			  "0.173, 0.168, 0.148, 0.108, 0.016, 0.000, 0.000", \
			  "0.401, 0.396, 0.376, 0.336, 0.244, 0.066, 0.000", \
			  "0.629, 0.624, 0.604, 0.564, 0.472, 0.294, 0.202" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.010, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.059, 0.054, 0.034, 0.000, 0.000, 0.000, 0.000", \
			  "0.173, 0.168, 0.148, 0.108, 0.016, 0.000, 0.000", \
			  "0.401, 0.396, 0.376, 0.336, 0.244, 0.066, 0.000", \
			  "0.629, 0.624, 0.604, 0.564, 0.472, 0.294, 0.202" \
			)
			}
ENDARCDATA

ARCDATA
tch_tws:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.363, 0.366, 0.378, 0.408, 0.483, 0.632, 0.782", \
			  "0.356, 0.359, 0.371, 0.401, 0.476, 0.626, 0.776", \
			  "0.332, 0.335, 0.347, 0.377, 0.452, 0.601, 0.751", \
			  "0.283, 0.286, 0.298, 0.328, 0.403, 0.553, 0.702", \
			  "0.169, 0.172, 0.184, 0.214, 0.289, 0.439, 0.589", \
			  "0.091, 0.094, 0.106, 0.130, 0.187, 0.299, 0.419", \
			  "0.091, 0.094, 0.106, 0.130, 0.187, 0.299, 0.419" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.363, 0.366, 0.378, 0.408, 0.483, 0.632, 0.782", \
			  "0.356, 0.359, 0.371, 0.401, 0.476, 0.626, 0.776", \
			  "0.332, 0.335, 0.347, 0.377, 0.452, 0.601, 0.751", \
			  "0.283, 0.286, 0.298, 0.328, 0.403, 0.553, 0.702", \
			  "0.169, 0.172, 0.184, 0.214, 0.289, 0.439, 0.589", \
			  "0.091, 0.094, 0.106, 0.130, 0.187, 0.299, 0.419", \
			  "0.091, 0.094, 0.106, 0.130, 0.187, 0.299, 0.419" \
			)
			}
ENDARCDATA

ARCDATA
tch_twh:
			rise_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.155, 0.150, 0.134, 0.102, 0.027, 0.000, 0.000", \
			  "0.383, 0.378, 0.362, 0.330, 0.255, 0.127, 0.015" \
			)
			}
			fall_constraint(RA1SHD256X32_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.155, 0.150, 0.134, 0.102, 0.027, 0.000, 0.000", \
			  "0.383, 0.378, 0.362, 0.330, 0.255, 0.127, 0.015" \
			)
			}
ENDARCDATA



ARCDATA
period_tcyc:
			rise_constraint(scalar) {
				values ("1.918")
			}
			fall_constraint(scalar) {
				values ("1.918")
			}
ENDARCDATA

ARCDATA
tpw_tckl:
			rise_constraint(scalar) {
				values ("0.283")
			}
			fall_constraint(scalar) {
				values ("0.283")
			}
ENDARCDATA

ARCDATA
tpw_tckh:
			rise_constraint(scalar) {
				values ("0.209")
			}
			fall_constraint(scalar) {
				values ("0.209")
			}
ENDARCDATA
ARCDATA
dly_tya:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "2.002, 2.007, 2.024, 2.051, 2.132, 2.283, 2.434", \
			  "2.009, 2.014, 2.030, 2.057, 2.138, 2.289, 2.440", \
			  "2.033, 2.038, 2.055, 2.082, 2.163, 2.314, 2.465", \
			  "2.082, 2.087, 2.103, 2.130, 2.211, 2.363, 2.514", \
			  "2.196, 2.201, 2.217, 2.244, 2.325, 2.477, 2.628", \
			  "2.424, 2.429, 2.445, 2.472, 2.553, 2.704, 2.856", \
			  "2.652, 2.657, 2.673, 2.700, 2.781, 2.932, 3.084" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ( \
			  "1.998, 2.002, 2.013, 2.032, 2.089, 2.195, 2.301", \
			  "2.005, 2.009, 2.020, 2.039, 2.096, 2.201, 2.307", \
			  "2.029, 2.033, 2.044, 2.063, 2.120, 2.226, 2.332", \
			  "2.078, 2.082, 2.093, 2.112, 2.169, 2.275, 2.381", \
			  "2.192, 2.196, 2.207, 2.226, 2.283, 2.389, 2.495", \
			  "2.420, 2.424, 2.435, 2.454, 2.511, 2.617, 2.722", \
			  "2.648, 2.652, 2.663, 2.682, 2.739, 2.845, 2.950" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.022, 0.032, 0.062, 0.112, 0.262, 0.542, 0.822");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
			}
ENDARCDATA
ARCDATA
dly_tlzl:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.964, 0.964, 0.964, 0.964, 0.964, 1.080, 1.232", \
			  "0.968, 0.968, 0.968, 0.968, 0.968, 1.086, 1.237", \
			  "0.983, 0.983, 0.983, 0.983, 0.983, 1.105, 1.256", \
			  "1.012, 1.012, 1.012, 1.012, 1.012, 1.143, 1.294", \
			  "1.082, 1.082, 1.082, 1.082, 1.082, 1.233, 1.384", \
			  "1.221, 1.221, 1.221, 1.221, 1.262, 1.413, 1.564", \
			  "1.360, 1.360, 1.360, 1.360, 1.441, 1.592, 1.744" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 1.037", \
			  "0.968, 0.968, 0.968, 0.968, 0.968, 0.968, 1.042", \
			  "0.983, 0.983, 0.983, 0.983, 0.983, 0.983, 1.061", \
			  "1.012, 1.012, 1.012, 1.012, 1.012, 1.012, 1.100", \
			  "1.082, 1.082, 1.082, 1.082, 1.082, 1.084, 1.189", \
			  "1.221, 1.221, 1.221, 1.221, 1.221, 1.263, 1.369", \
			  "1.360, 1.360, 1.360, 1.360, 1.360, 1.443, 1.549" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
			}
ENDARCDATA

ARCDATA
dly_tlzh:
			cell_rise(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.964, 0.964, 0.964, 0.964, 0.964, 1.080, 1.232", \
			  "0.968, 0.968, 0.968, 0.968, 0.968, 1.086, 1.237", \
			  "0.983, 0.983, 0.983, 0.983, 0.983, 1.105, 1.256", \
			  "1.012, 1.012, 1.012, 1.012, 1.012, 1.143, 1.294", \
			  "1.082, 1.082, 1.082, 1.082, 1.082, 1.233, 1.384", \
			  "1.221, 1.221, 1.221, 1.221, 1.262, 1.413, 1.564", \
			  "1.360, 1.360, 1.360, 1.360, 1.441, 1.592, 1.744" \
			)
			}
			rise_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.111, 0.122, 0.155, 0.209, 0.370, 0.672, 0.974")
			}
			cell_fall(RA1SHD256X32_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.200, 2.600, 4.000");
			index_2 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ( \
			  "0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 1.037", \
			  "0.968, 0.968, 0.968, 0.968, 0.968, 0.968, 1.042", \
			  "0.983, 0.983, 0.983, 0.983, 0.983, 0.983, 1.061", \
			  "1.012, 1.012, 1.012, 1.012, 1.012, 1.012, 1.100", \
			  "1.082, 1.082, 1.082, 1.082, 1.082, 1.084, 1.189", \
			  "1.221, 1.221, 1.221, 1.221, 1.221, 1.263, 1.369", \
			  "1.360, 1.360, 1.360, 1.360, 1.360, 1.443, 1.549" \
			)
			}
			fall_transition(RA1SHD256X32_load_template) {
			index_1 ("0.000, 0.010, 0.040, 0.090, 0.240, 0.520, 0.800");
			values ("0.073, 0.079, 0.098, 0.128, 0.219, 0.388, 0.558")
			}
ENDARCDATA

ENDTIMINGDATA
ENDMODELDATA
