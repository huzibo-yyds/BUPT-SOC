/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2002  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single-Port SRAM
 *           			SMIC 0.18um Logic018 Process
 *      version:		2005Q3V1
 *      comment:		
 *      configuration:	 -instname RA1SHD8192X64 -words 8192 -bits 64 -frequency 20 -ring_width 2 -mux 16 -drive 12 -write_mask on -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm on -libname USERLIB
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  RA1SHD8192X64
 *      Words:          8192
 *      Word Width:     64
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        typical
 *      Delays:		max
 *
 *      Creation Date:  2002-06-03 11:39:24Z
 *      Version:        2005Q3V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2002-06-03 11:39:24Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2002 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.800;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.800;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(typical) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.800;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : typical;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD8192X64_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD8192X64_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD8192X64_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD8192X64_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD8192X64_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 64;
		bit_from : 63;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD8192X64_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 13;
		bit_from : 12;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD8192X64_WRITE) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD8192X64) {
	area		 : 2927339.854;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 13;
		word_width : 64;
	}
	bus(Q)	 {
		bus_type : RA1SHD8192X64_DATA;
		direction : output;
		max_capacitance : 0.823;
		capacitance : 0.023;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD8192X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "1.844, 1.848, 1.858, 1.876, 1.929, 2.028, 2.127", \
			  "1.848, 1.852, 1.862, 1.880, 1.933, 2.032, 2.131", \
			  "1.853, 1.857, 1.868, 1.885, 1.938, 2.038, 2.137", \
			  "1.874, 1.878, 1.888, 1.906, 1.959, 2.058, 2.157", \
			  "1.916, 1.919, 1.930, 1.948, 2.001, 2.100, 2.199", \
			  "1.988, 1.992, 2.003, 2.020, 2.073, 2.172, 2.272", \
			  "2.134, 2.137, 2.148, 2.166, 2.219, 2.318, 2.417" \
			)
			}
			rise_transition(RA1SHD8192X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.048, 0.055, 0.076, 0.112, 0.218, 0.417, 0.615")
			}
			cell_fall(RA1SHD8192X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "1.841, 1.843, 1.850, 1.862, 1.898, 1.965, 2.032", \
			  "1.845, 1.847, 1.855, 1.867, 1.902, 1.970, 2.037", \
			  "1.850, 1.853, 1.860, 1.872, 1.908, 1.975, 2.042", \
			  "1.871, 1.873, 1.881, 1.893, 1.928, 1.995, 2.063", \
			  "1.912, 1.915, 1.922, 1.934, 1.970, 2.037, 2.104", \
			  "1.985, 1.988, 1.995, 2.007, 2.043, 2.110, 2.177", \
			  "2.130, 2.133, 2.140, 2.152, 2.188, 2.255, 2.322" \
			)
			}
			fall_transition(RA1SHD8192X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.046, 0.050, 0.062, 0.081, 0.138, 0.245, 0.353")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD8192X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.745, 0.745, 0.745, 0.745, 0.745, 0.805, 0.904", \
			  "0.748, 0.748, 0.748, 0.748, 0.748, 0.811, 0.910", \
			  "0.751, 0.751, 0.751, 0.751, 0.751, 0.818, 0.917", \
			  "0.763, 0.763, 0.763, 0.763, 0.763, 0.845, 0.944", \
			  "0.789, 0.789, 0.789, 0.789, 0.802, 0.901, 1.000", \
			  "0.833, 0.833, 0.833, 0.845, 0.898, 0.997, 1.096", \
			  "1.007, 1.010, 1.021, 1.039, 1.092, 1.191, 1.290" \
			)
                       }
			rise_transition(RA1SHD8192X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.048, 0.055, 0.076, 0.112, 0.218, 0.417, 0.615")
			}
			cell_fall(RA1SHD8192X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.745, 0.745, 0.745, 0.745, 0.745, 0.745, 0.755", \
			  "0.748, 0.748, 0.748, 0.748, 0.748, 0.748, 0.761", \
			  "0.751, 0.751, 0.751, 0.751, 0.751, 0.751, 0.768", \
			  "0.763, 0.763, 0.763, 0.763, 0.763, 0.763, 0.796", \
			  "0.789, 0.789, 0.789, 0.789, 0.789, 0.789, 0.851", \
			  "0.833, 0.833, 0.833, 0.833, 0.833, 0.880, 0.948", \
			  "0.949, 0.952, 0.959, 0.971, 1.007, 1.074, 1.141" \
			)
			}
			fall_transition(RA1SHD8192X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.046, 0.050, 0.062, 0.081, 0.138, 0.245, 0.353")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD8192X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.745, 0.745, 0.745, 0.745, 0.745, 0.805, 0.904", \
			  "0.748, 0.748, 0.748, 0.748, 0.748, 0.811, 0.910", \
			  "0.751, 0.751, 0.751, 0.751, 0.751, 0.818, 0.917", \
			  "0.763, 0.763, 0.763, 0.763, 0.763, 0.845, 0.944", \
			  "0.789, 0.789, 0.789, 0.789, 0.802, 0.901, 1.000", \
			  "0.833, 0.833, 0.833, 0.845, 0.898, 0.997, 1.096", \
			  "1.007, 1.010, 1.021, 1.039, 1.092, 1.191, 1.290" \
			)
                       }
			rise_transition(RA1SHD8192X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.048, 0.055, 0.076, 0.112, 0.218, 0.417, 0.615")
			}
			cell_fall(RA1SHD8192X64_delay_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ( \
			  "0.745, 0.745, 0.745, 0.745, 0.745, 0.745, 0.755", \
			  "0.748, 0.748, 0.748, 0.748, 0.748, 0.748, 0.761", \
			  "0.751, 0.751, 0.751, 0.751, 0.751, 0.751, 0.768", \
			  "0.763, 0.763, 0.763, 0.763, 0.763, 0.763, 0.796", \
			  "0.789, 0.789, 0.789, 0.789, 0.789, 0.789, 0.851", \
			  "0.833, 0.833, 0.833, 0.833, 0.833, 0.880, 0.948", \
			  "0.949, 0.952, 0.959, 0.971, 1.007, 1.074, 1.141" \
			)
			}
			fall_transition(RA1SHD8192X64_load_template) {
			index_1 ("0.023, 0.033, 0.063, 0.113, 0.263, 0.543, 0.823");
			values ("0.046, 0.050, 0.062, 0.081, 0.138, 0.245, 0.353")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.274
		clock	: true;
		min_pulse_width_low	: 0.180;
		min_pulse_width_high	: 0.118;
		min_period		: 2.225;
		max_transition		: 2.800;
		internal_power(){
			when : "(!CEN \
                                 & WEN[7] \
                                 & WEN[6] \
                                 & WEN[5] \
                                 & WEN[4] \
                                 & WEN[3] \
                                 & WEN[2] \
                                 & WEN[1] \
                                 & WEN[0] \
                        	)";
			rise_power(RA1SHD8192X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("460.995, 460.995")
        		}
			fall_power(RA1SHD8192X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
            		when : "(!CEN & !( \
                            	WEN[7] & \
                            	WEN[6] & \
                            	WEN[5] & \
                            	WEN[4] & \
                            	WEN[3] & \
                            	WEN[2] & \
                            	WEN[1] & \
                            	WEN[0]))";
        		rise_power(RA1SHD8192X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("628.621, 628.621")
        		}
        		fall_power(RA1SHD8192X64_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD8192X64_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.120, 0.120")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.409, 0.410, 0.411, 0.415, 0.424, 0.442, 0.596", \
			  "0.405, 0.406, 0.407, 0.411, 0.419, 0.438, 0.591", \
			  "0.400, 0.401, 0.402, 0.406, 0.414, 0.432, 0.586", \
			  "0.379, 0.380, 0.381, 0.385, 0.393, 0.412, 0.565", \
			  "0.338, 0.339, 0.340, 0.344, 0.352, 0.370, 0.524", \
			  "0.265, 0.266, 0.267, 0.271, 0.279, 0.298, 0.451", \
			  "0.120, 0.121, 0.122, 0.126, 0.134, 0.152, 0.306" \
			)
			}
			fall_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.409, 0.410, 0.411, 0.415, 0.424, 0.442, 0.596", \
			  "0.405, 0.406, 0.407, 0.411, 0.419, 0.438, 0.591", \
			  "0.400, 0.401, 0.402, 0.406, 0.414, 0.432, 0.586", \
			  "0.379, 0.380, 0.381, 0.385, 0.393, 0.412, 0.565", \
			  "0.338, 0.339, 0.340, 0.344, 0.352, 0.370, 0.524", \
			  "0.265, 0.266, 0.267, 0.271, 0.279, 0.298, 0.451", \
			  "0.120, 0.121, 0.122, 0.126, 0.134, 0.152, 0.306" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.022, 0.021, 0.017, 0.009, 0.000, 0.000", \
			  "0.096, 0.095, 0.094, 0.090, 0.081, 0.067, 0.038", \
			  "0.241, 0.240, 0.239, 0.235, 0.227, 0.212, 0.183" \
			)
				
			}
			fall_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.022, 0.021, 0.017, 0.009, 0.000, 0.000", \
			  "0.096, 0.095, 0.094, 0.090, 0.081, 0.067, 0.038", \
			  "0.241, 0.240, 0.239, 0.235, 0.227, 0.212, 0.183" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	bus(WEN)	 {
		bus_type : RA1SHD8192X64_WRITE;
		direction : input;
		capacitance : 0.122;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.253, 0.255, 0.257, 0.266, 0.284, 0.349, 0.518", \
			  "0.249, 0.251, 0.253, 0.262, 0.280, 0.345, 0.514", \
			  "0.244, 0.245, 0.248, 0.257, 0.275, 0.339, 0.509", \
			  "0.223, 0.225, 0.227, 0.236, 0.254, 0.319, 0.488", \
			  "0.181, 0.183, 0.185, 0.194, 0.213, 0.277, 0.446", \
			  "0.138, 0.140, 0.143, 0.152, 0.170, 0.220, 0.389", \
			  "0.138, 0.140, 0.143, 0.152, 0.170, 0.220, 0.389" \
			)
			}
			fall_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.253, 0.255, 0.257, 0.266, 0.284, 0.349, 0.518", \
			  "0.249, 0.251, 0.253, 0.262, 0.280, 0.345, 0.514", \
			  "0.244, 0.245, 0.248, 0.257, 0.275, 0.339, 0.509", \
			  "0.223, 0.225, 0.227, 0.236, 0.254, 0.319, 0.488", \
			  "0.181, 0.183, 0.185, 0.194, 0.213, 0.277, 0.446", \
			  "0.138, 0.140, 0.143, 0.152, 0.170, 0.220, 0.389", \
			  "0.138, 0.140, 0.143, 0.152, 0.170, 0.220, 0.389" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.014, 0.012, 0.010, 0.001, 0.000, 0.000, 0.000", \
			  "0.160, 0.158, 0.156, 0.146, 0.128, 0.096, 0.033" \
			)
			}
			fall_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.014, 0.012, 0.010, 0.001, 0.000, 0.000, 0.000", \
			  "0.160, 0.158, 0.156, 0.146, 0.128, 0.096, 0.033" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD8192X64_ADDRESS;
		direction : input;
		capacitance : 0.055;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.831, 0.832, 0.833, 0.835, 0.841, 0.851, 0.871", \
			  "0.827, 0.828, 0.828, 0.831, 0.837, 0.847, 0.867", \
			  "0.822, 0.823, 0.823, 0.826, 0.832, 0.842, 0.862", \
			  "0.801, 0.802, 0.803, 0.805, 0.811, 0.821, 0.841", \
			  "0.760, 0.760, 0.761, 0.764, 0.770, 0.780, 0.800", \
			  "0.687, 0.688, 0.688, 0.691, 0.697, 0.707, 0.727", \
			  "0.542, 0.542, 0.543, 0.546, 0.552, 0.562, 0.582" \
			)
			}
			fall_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.831, 0.832, 0.833, 0.835, 0.841, 0.851, 0.871", \
			  "0.827, 0.828, 0.828, 0.831, 0.837, 0.847, 0.867", \
			  "0.822, 0.823, 0.823, 0.826, 0.832, 0.842, 0.862", \
			  "0.801, 0.802, 0.803, 0.805, 0.811, 0.821, 0.841", \
			  "0.760, 0.760, 0.761, 0.764, 0.770, 0.780, 0.800", \
			  "0.687, 0.688, 0.688, 0.691, 0.697, 0.707, 0.727", \
			  "0.542, 0.542, 0.543, 0.546, 0.552, 0.562, 0.582" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.056, 0.055, 0.055, 0.052, 0.046, 0.036, 0.016", \
			  "0.060, 0.060, 0.059, 0.056, 0.050, 0.040, 0.020", \
			  "0.065, 0.065, 0.064, 0.061, 0.055, 0.045, 0.025", \
			  "0.086, 0.085, 0.085, 0.082, 0.076, 0.066, 0.046", \
			  "0.128, 0.127, 0.126, 0.123, 0.118, 0.108, 0.088", \
			  "0.200, 0.200, 0.199, 0.196, 0.190, 0.180, 0.160", \
			  "0.346, 0.345, 0.344, 0.341, 0.336, 0.326, 0.306" \
			)
			}
			fall_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.030, 0.027, 0.023, 0.005, 0.000, 0.000, 0.000", \
			  "0.035, 0.031, 0.027, 0.009, 0.000, 0.000, 0.000", \
			  "0.040, 0.036, 0.032, 0.014, 0.000, 0.000, 0.000", \
			  "0.061, 0.057, 0.053, 0.035, 0.000, 0.000, 0.000", \
			  "0.102, 0.099, 0.094, 0.077, 0.042, 0.000, 0.000", \
			  "0.175, 0.171, 0.167, 0.149, 0.114, 0.053, 0.000", \
			  "0.320, 0.317, 0.312, 0.295, 0.260, 0.198, 0.076" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD8192X64_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("4.047, 4.047")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD8192X64_DATA;
		direction : input;
		capacitance : 0.004;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.256, 0.257, 0.259, 0.265, 0.277, 0.297, 0.480", \
			  "0.252, 0.253, 0.255, 0.260, 0.272, 0.293, 0.476", \
			  "0.247, 0.248, 0.249, 0.255, 0.267, 0.288, 0.470", \
			  "0.226, 0.227, 0.229, 0.235, 0.246, 0.267, 0.450", \
			  "0.184, 0.186, 0.187, 0.193, 0.205, 0.226, 0.408", \
			  "0.112, 0.113, 0.114, 0.120, 0.132, 0.153, 0.335", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.008, 0.190" \
			)
			}
			fall_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.256, 0.257, 0.259, 0.265, 0.277, 0.297, 0.480", \
			  "0.252, 0.253, 0.255, 0.260, 0.272, 0.293, 0.476", \
			  "0.247, 0.248, 0.249, 0.255, 0.267, 0.288, 0.470", \
			  "0.226, 0.227, 0.229, 0.235, 0.246, 0.267, 0.450", \
			  "0.184, 0.186, 0.187, 0.193, 0.205, 0.226, 0.408", \
			  "0.112, 0.113, 0.114, 0.120, 0.132, 0.153, 0.335", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.008, 0.190" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.063, 0.057, 0.050, 0.021, 0.000, 0.000, 0.000", \
			  "0.067, 0.061, 0.054, 0.026, 0.000, 0.000, 0.000", \
			  "0.072, 0.067, 0.059, 0.031, 0.000, 0.000, 0.000", \
			  "0.093, 0.087, 0.080, 0.052, 0.000, 0.000, 0.000", \
			  "0.135, 0.129, 0.122, 0.093, 0.036, 0.000, 0.000", \
			  "0.207, 0.202, 0.194, 0.166, 0.108, 0.014, 0.000", \
			  "0.353, 0.347, 0.340, 0.311, 0.254, 0.159, 0.117" \
			)
			}
			fall_constraint(RA1SHD8192X64_constraint_template) {
			index_1 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			index_2 ("0.010, 0.050, 0.100, 0.300, 0.700, 1.400, 2.800");
			values ( \
			  "0.063, 0.057, 0.050, 0.021, 0.000, 0.000, 0.000", \
			  "0.067, 0.061, 0.054, 0.026, 0.000, 0.000, 0.000", \
			  "0.072, 0.067, 0.059, 0.031, 0.000, 0.000, 0.000", \
			  "0.093, 0.087, 0.080, 0.052, 0.000, 0.000, 0.000", \
			  "0.135, 0.129, 0.122, 0.093, 0.036, 0.000, 0.000", \
			  "0.207, 0.202, 0.194, 0.166, 0.108, 0.014, 0.000", \
			  "0.353, 0.347, 0.340, 0.311, 0.254, 0.159, 0.117" \
			)
		}	}
	}

	cell_leakage_power : 8.25E-2;
  }
}
